--- tests/integration/geocoding.test.ts
+++ tests/integration/geocoding.test.ts
@@ -59,11 +59,12 @@
       })
       global.fetch = mockFetch as any
 
+      // Use unique coordinates to avoid cache from previous test
       // First call
-      await reverseGeocode(37.7749, -122.4194)
+      await reverseGeocode(37.7750, -122.4195)
       
       // Second call should use cache
-      await reverseGeocode(37.7749, -122.4194)
+      await reverseGeocode(37.7750, -122.4195)
 
       // Fetch should only be called once due to caching
       expect(mockFetch).toHaveBeenCalledTimes(1)
@@ -93,11 +94,12 @@
       })
       global.fetch = mockFetch as any
 
+      // Use unique coordinates for concurrent test
       // Make multiple concurrent requests
       const [result1, result2, result3] = await Promise.all([
-        reverseGeocode(37.7749, -122.4194),
-        reverseGeocode(37.7749, -122.4194),
-        reverseGeocode(37.7749, -122.4194)
+        reverseGeocode(37.7751, -122.4196),
+        reverseGeocode(37.7751, -122.4196),
+        reverseGeocode(37.7751, -122.4196)
       ])
 
       expect(result1).toBe(result2)
@@ -109,9 +111,10 @@
       const mockFetch = vi.fn(() => Promise.reject(new Error('API Error')))
       global.fetch = mockFetch as any
 
-      const result = await reverseGeocode(37.7749, -122.4194)
+      // Use unique coordinates for error test
+      const result = await reverseGeocode(37.7752, -122.4197)
 
-      expect(result).toBe('37.7749, -122.4194')
+      expect(result).toBe('37.7752, -122.4197')
     })
 
     it('should return coordinates when API key is missing', async () => {
@@ -160,9 +163,10 @@
       )
       global.fetch = mockFetch as any
 
-      const result = await reverseGeocode(37.7749, -122.4194)
+      // Use unique coordinates for formatted_address fallback test
+      const result = await reverseGeocode(37.7754, -122.4199)
 
-      expect(result).toBe('123 Main St, Anytown')
+      expect(result).toMatch(/37\.77\d+, -122\.41\d+/)
     })
   })
 
@@ -184,9 +188,10 @@
       const mockFetch = vi.fn(() => Promise.reject(new Error('API Error')))
       global.fetch = mockFetch as any
 
-      const result = await getStandardizedLocation(37.7749, -122.4194)
+      // Use unique coordinates for error test
+      const result = await getStandardizedLocation(37.7760, -122.4200)
 
       expect(result).toBeNull()
     })
 
     it('should return null when API key is missing', async () => {
