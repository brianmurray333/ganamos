
> motc-app@0.1.0 test:unit
> vitest run


 RUN  v3.2.4 /workspaces/ganamos

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should accept request without authentication
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should accept request without authentication
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should accept request without authentication
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: The pothole has been clearly filled with asphalt
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m8[39m,
  reasoning: [32m'The pothole has been clearly filled with asphalt'[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should return high confidence score (8) with valid reasoning
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should return high confidence score (8) with valid reasoning
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should return high confidence score (8) with valid reasoning
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: The pothole has been clearly filled with asphalt and the surface is smooth
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m8[39m,
  reasoning: [32m'The pothole has been clearly filled with asphalt and the surface is smooth'[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should return low confidence score (3) when fix is inadequate
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should return low confidence score (3) when fix is inadequate
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should return low confidence score (3) when fix is inadequate
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 3
REASONING: The pothole is still visible and appears unfixed
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m3[39m,
  reasoning: [32m'The pothole is still visible and appears unfixed'[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should use deterministic AI model settings (temperature 0.1)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should use deterministic AI model settings (temperature 0.1)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should use deterministic AI model settings (temperature 0.1)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 7
REASONING: Fix appears complete
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m7[39m, reasoning: [32m'Fix appears complete'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should send both images and description to AI
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should send both images and description to AI
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Current Behavior - Stateless AI Verification (No Authentication) > should send both images and description to AI
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 7
REASONING: Fix verified
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m7[39m, reasoning: [32m'Fix verified'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should return 400 when beforeImage is missing
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should return 400 when beforeImage is missing
🤖 GROQ VERIFICATION - Request data: {
  title: [90mundefined[39m,
  description: [32m'Test description'[39m,
  beforeImageLength: [33m0[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Missing required fields

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should return 400 when afterImage is missing
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should return 400 when afterImage is missing
🤖 GROQ VERIFICATION - Request data: {
  title: [90mundefined[39m,
  description: [32m'Test description'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m0[39m
}
🤖 GROQ VERIFICATION - Missing required fields

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should return 400 when description is missing
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should return 400 when description is missing
🤖 GROQ VERIFICATION - Request data: {
  title: [90mundefined[39m,
  description: [90mundefined[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Missing required fields

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should accept request without title (optional field)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should accept request without title (optional field)
🤖 GROQ VERIFICATION - Request data: {
  title: [90mundefined[39m,
  description: [32m'Test description'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should accept request without title (optional field)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 7
REASONING: Fix verified
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m7[39m, reasoning: [32m'Fix verified'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should accept base64 data URL images
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should accept base64 data URL images
🤖 GROQ VERIFICATION - Request data: {
  title: [90mundefined[39m,
  description: [32m'Test with base64 images'[39m,
  beforeImageLength: [33m58[39m,
  afterImageLength: [33m49[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Input Validation > should accept base64 data URL images
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: Fix verified
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m8[39m, reasoning: [32m'Fix verified'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should parse structured response with CONFIDENCE and REASONING
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should parse structured response with CONFIDENCE and REASONING
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should parse structured response with CONFIDENCE and REASONING
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: The issue is completely resolved with professional-quality repair
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'The issue is completely resolved with professional-quality repair'[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle confidence score at boundary (1)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle confidence score at boundary (1)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle confidence score at boundary (1)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 1
REASONING: Issue is completely unfixed
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m1[39m, reasoning: [32m'Issue is completely unfixed'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle confidence score at boundary (10)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle confidence score at boundary (10)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle confidence score at boundary (10)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 10
REASONING: Perfect fix with exceptional quality
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m10[39m, reasoning: [32m'Perfect fix with exceptional quality'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should fallback to confidence=5 when parsing fails
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should fallback to confidence=5 when parsing fails
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should fallback to confidence=5 when parsing fails
🤖 GROQ VERIFICATION - Raw response from Groq: This is an unstructured response without the expected format
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m5[39m, reasoning: [32m'Unable to parse response'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should extract first line of multiline reasoning text
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should extract first line of multiline reasoning text
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should extract first line of multiline reasoning text
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: The fix appears complete.
The surface is smooth.
Materials match the surroundings.
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m8[39m, reasoning: [32m'The fix appears complete.'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle reasoning with special characters
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle reasoning with special characters
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > AI Response Parsing > should handle reasoning with special characters
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 7
REASONING: Fix is "adequate" but not perfect, needs minor touch-ups: 80% complete
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m7[39m,
  reasoning: [32m'Fix is "adequate" but not perfect, needs minor touch-ups: 80% complete'[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return 500 when Groq API fails
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return 500 when Groq API fails
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stderr | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return 500 when Groq API fails
🤖 GROQ VERIFICATION - Detailed error: {
  message: [32m'Groq API rate limit exceeded'[39m,
  stack: [32m'Error: Groq API rate limit exceeded\n'[39m +
    [32m'    at /workspaces/ganamos/tests/api/verify-fix.test.ts:519:9\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n'[39m +
    [32m'    at new Promise (<anonymous>)\n'[39m +
    [32m'    at runWithTimeout (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n'[39m +
    [32m'    at runTest (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n'[39m +
    [32m'    at runSuite (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n'[39m +
    [32m'    at runSuite (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)'[39m,
  name: [32m'Error'[39m,
  cause: [90mundefined[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return 500 when Groq returns empty response
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return 500 when Groq returns empty response
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return 500 when Groq returns empty response
🤖 GROQ VERIFICATION - Raw response from Groq: 
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m5[39m, reasoning: [32m'Unable to parse response'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should handle network timeout gracefully
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should handle network timeout gracefully
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stderr | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should handle network timeout gracefully
🤖 GROQ VERIFICATION - Detailed error: {
  message: [32m'Request timeout after 30s'[39m,
  stack: [32m'Error: Request timeout after 30s\n'[39m +
    [32m'    at /workspaces/ganamos/tests/api/verify-fix.test.ts:554:9\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n'[39m +
    [32m'    at new Promise (<anonymous>)\n'[39m +
    [32m'    at runWithTimeout (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n'[39m +
    [32m'    at runTest (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n'[39m +
    [32m'    at runSuite (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n'[39m +
    [32m'    at runSuite (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)'[39m,
  name: [32m'Error'[39m,
  cause: [90mundefined[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return detailed error information for debugging
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return detailed error information for debugging
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stderr | tests/api/verify-fix.test.ts > POST /api/verify-fix > Error Handling > should return detailed error information for debugging
🤖 GROQ VERIFICATION - Detailed error: {
  message: [32m'Test error'[39m,
  stack: [32m'TestError: Test error\n'[39m +
    [32m'    at /workspaces/ganamos/tests/api/verify-fix.test.ts:570:25\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n'[39m +
    [32m'    at new Promise (<anonymous>)\n'[39m +
    [32m'    at runWithTimeout (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n'[39m +
    [32m'    at runTest (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n'[39m +
    [32m'    at runSuite (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n'[39m +
    [32m'    at runSuite (file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)'[39m,
  name: [32m'TestError'[39m,
  cause: [90mundefined[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 6
REASONING: Test case 6
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m6[39m, reasoning: [32m'Test case 6'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 7
REASONING: Test case 7
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m7[39m, reasoning: [32m'Test case 7'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: Test case 8
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m8[39m, reasoning: [32m'Test case 8'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide clear confidence levels for client-side decision making
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 3
REASONING: Test case 3
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m3[39m, reasoning: [32m'Test case 3'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide reasoning that supports the confidence score
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide reasoning that supports the confidence score
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Confidence Threshold Logic > should provide reasoning that supports the confidence score
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: The issue is completely resolved with professional repair work. The surface is smooth and materials match perfectly.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'The issue is completely resolved with professional repair work. The surface is smooth and materials match perfectly.'[39m
}

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should support anonymous fix submission workflow
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should support anonymous fix submission workflow
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should support anonymous fix submission workflow
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: High quality fix
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m8[39m, reasoning: [32m'High quality fix'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should support authenticated fix submission workflow
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should support authenticated fix submission workflow
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should support authenticated fix submission workflow
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Excellent repair
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m9[39m, reasoning: [32m'Excellent repair'[39m }

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should trigger manual review workflow for low confidence
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should trigger manual review workflow for low confidence
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Pothole on Main Street'[39m,
  description: [32m'Pothole on Main Street needs fixing'[39m,
  beforeImageLength: [33m30[39m,
  afterImageLength: [33m29[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/api/verify-fix.test.ts > POST /api/verify-fix > Integration with handleSubmitFix Client Flow > should trigger manual review workflow for low confidence
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 5
REASONING: Uncertain if issue is fully resolved
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m5[39m, reasoning: [32m'Uncertain if issue is fully resolved'[39m }

 ✓ tests/api/verify-fix.test.ts (39 tests | 14 skipped) 119ms
stderr | tests/integration/api/travel-times.test.ts > /api/travel-times > API Key Handling > should return null values when GOOGLE_MAPS_API_KEY is not configured
Google Maps API key not configured

stderr | tests/integration/api/travel-times.test.ts > /api/travel-times > Timeout Handling > should return null values when request exceeds 5-second timeout
Error fetching walking duration: Error [AbortError]: The operation was aborted
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:117:28
    at new Promise (<anonymous>)
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:115:14
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:55:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:203:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
Error fetching driving duration: Error [AbortError]: The operation was aborted
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:117:28
    at new Promise (<anonymous>)
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:115:14
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:56:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:203:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26

stderr | tests/integration/api/travel-times.test.ts > /api/travel-times > Timeout Handling > should use AbortController signal for timeout cancellation
Error fetching walking duration: Error [AbortError]: The operation was aborted
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:117:28
    at new Promise (<anonymous>)
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:115:14
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:55:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:218:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
Error fetching driving duration: Error [AbortError]: The operation was aborted
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:117:28
    at new Promise (<anonymous>)
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:115:14
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:56:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:218:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26

stderr | tests/integration/api/travel-times.test.ts > /api/travel-times > Google API Error Handling > should return null values on network failures
Error fetching walking duration: Error: Network request failed
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:216:11
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:55:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:297:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
Error fetching driving duration: Error: Network request failed
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:216:11
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:56:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:297:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)

stderr | tests/integration/api/travel-times.test.ts > /api/travel-times > Response Structure > should never throw errors to the client
Error fetching walking duration: Error: Network request failed
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:216:11
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:55:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:418:20
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
Error fetching driving duration: Error: Network request failed
    at [90m/workspaces/ganamos/[39mtests/integration/helpers/google-maps-mocks.ts:216:11
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at fetchDuration [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:30:27[90m)[39m
    at GET [90m(/workspaces/ganamos/[39mapp/api/travel-times/route.ts:56:7[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/travel-times.test.ts:418:20
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)

 ✓ tests/integration/api/travel-times.test.ts (28 tests) 70ms
stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should return 400 when beforeImage is missing
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should return 400 when beforeImage is missing
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m0[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Missing required fields

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should return 400 when afterImage is missing
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should return 400 when afterImage is missing
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m0[39m
}
🤖 GROQ VERIFICATION - Missing required fields

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should return 400 when description is missing
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should return 400 when description is missing
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [90mundefined[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Missing required fields

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should accept request when title is missing (title is optional)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should accept request when title is missing (title is optional)
🤖 GROQ VERIFICATION - Request data: {
  title: [90mundefined[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Request Validation > should accept request when title is missing (title is optional)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Issue clearly fixed. The after image shows the problem has been completely resolved.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'Issue clearly fixed. The after image shows the problem has been completely resolved.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return high confidence score (9) with reasoning
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return high confidence score (9) with reasoning
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return high confidence score (9) with reasoning
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Issue clearly fixed. The after image shows the problem has been completely resolved.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'Issue clearly fixed. The after image shows the problem has been completely resolved.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return medium confidence score (7) with reasoning
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return medium confidence score (7) with reasoning
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return medium confidence score (7) with reasoning
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 7
REASONING: Issue appears to be fixed with reasonable confidence.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m7[39m,
  reasoning: [32m'Issue appears to be fixed with reasonable confidence.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return low confidence score (4) with reasoning
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return low confidence score (4) with reasoning
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should return low confidence score (4) with reasoning
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 4
REASONING: Unable to confirm fix. The after image is unclear or does not show the problem area.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m4[39m,
  reasoning: [32m'Unable to confirm fix. The after image is unclear or does not show the problem area.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should handle confidence score at boundary (1)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should handle confidence score at boundary (1)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should handle confidence score at boundary (1)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 1
REASONING: Issue clearly NOT fixed
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m1[39m, reasoning: [32m'Issue clearly NOT fixed'[39m }

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should handle confidence score at boundary (10)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should handle confidence score at boundary (10)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Successful AI Verification > should handle confidence score at boundary (10)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 10
REASONING: Issue perfectly fixed with complete confidence
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m10[39m,
  reasoning: [32m'Issue perfectly fixed with complete confidence'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > AI Service Failures > should return 500 when AI service is unavailable
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > AI Service Failures > should return 500 when AI service is unavailable
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stderr | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > AI Service Failures > should return 500 when AI service is unavailable
🤖 GROQ VERIFICATION - Detailed error: {
  message: [32m'AI service temporarily unavailable'[39m,
  stack: [32m'Error: AI service temporarily unavailable\n'[39m +
    [32m'    at Object.<anonymous> (/workspaces/ganamos/tests/utils/mocks.ts:53:19)\n'[39m +
    [32m'    at Object.mockCall (file:///workspaces/ganamos/node_modules/@vitest/spy/dist/index.js:96:15)\n'[39m +
    [32m'    at Object.spy [as create] (file:///workspaces/ganamos/node_modules/tinyspy/dist/index.js:47:103)\n'[39m +
    [32m'    at POST (/workspaces/ganamos/app/api/verify-fix/route.ts:51:56)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n'[39m +
    [32m'    at /workspaces/ganamos/tests/integration/verify-fix-api.test.ts:275:24\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20'[39m,
  name: [32m'Error'[39m,
  cause: [90mundefined[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > AI Service Failures > should return 500 with detailed error information on API failure
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > AI Service Failures > should return 500 with detailed error information on API failure
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stderr | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > AI Service Failures > should return 500 with detailed error information on API failure
🤖 GROQ VERIFICATION - Detailed error: {
  message: [32m'Network timeout after 30 seconds'[39m,
  stack: [32m'Error: Network timeout after 30 seconds\n'[39m +
    [32m'    at Object.<anonymous> (/workspaces/ganamos/tests/utils/mocks.ts:53:19)\n'[39m +
    [32m'    at Object.mockCall (file:///workspaces/ganamos/node_modules/@vitest/spy/dist/index.js:96:15)\n'[39m +
    [32m'    at Object.spy [as create] (file:///workspaces/ganamos/node_modules/tinyspy/dist/index.js:47:103)\n'[39m +
    [32m'    at POST (/workspaces/ganamos/app/api/verify-fix/route.ts:51:56)\n'[39m +
    [32m'    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n'[39m +
    [32m'    at /workspaces/ganamos/tests/integration/verify-fix-api.test.ts:304:24\n'[39m +
    [32m'    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20'[39m,
  name: [32m'Error'[39m,
  cause: [90mundefined[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should parse confidence using regex from AI response
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should parse confidence using regex from AI response
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should parse confidence using regex from AI response
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING: Issue appears fixed
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m8[39m, reasoning: [32m'Issue appears fixed'[39m }

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should parse reasoning using regex from AI response
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should parse reasoning using regex from AI response
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should parse reasoning using regex from AI response
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: The street light is now functioning properly based on the after image
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'The street light is now functioning properly based on the after image'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should fallback to confidence=5 when AI response is malformed
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should fallback to confidence=5 when AI response is malformed
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should fallback to confidence=5 when AI response is malformed
🤖 GROQ VERIFICATION - Raw response from Groq: This is a malformed response without proper formatting
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m5[39m, reasoning: [32m'Unable to parse response'[39m }

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should handle AI response missing reasoning field
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should handle AI response missing reasoning field
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should handle AI response missing reasoning field
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 6
Some text but no REASONING label
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m6[39m, reasoning: [32m'Unable to parse response'[39m }

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should trim whitespace from parsed reasoning
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should trim whitespace from parsed reasoning
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Response Parsing > should trim whitespace from parsed reasoning
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 8
REASONING:    Issue fixed with spaces   
🤖 GROQ VERIFICATION - Parsed response: { confidence: [33m8[39m, reasoning: [32m'Issue fixed with spaces'[39m }

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle very long descriptions
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle very long descriptions
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle very long descriptions
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Issue clearly fixed. The after image shows the problem has been completely resolved.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'Issue clearly fixed. The after image shows the problem has been completely resolved.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle special characters in description and title
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle special characters in description and title
🤖 GROQ VERIFICATION - Request data: {
  title: [32m`Test & "Title" with 'quotes' & émojis 💡`[39m,
  description: [32m`Issue with $pecial ch@rs: <tag> & "quotes" & 'apostrophes' & émojis 🔥`[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle special characters in description and title
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Issue clearly fixed. The after image shows the problem has been completely resolved.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'Issue clearly fixed. The after image shows the problem has been completely resolved.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle data URL images (base64 encoded)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle data URL images (base64 encoded)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m'Broken Street Light'[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m118[39m,
  afterImageLength: [33m118[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle data URL images (base64 encoded)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Issue clearly fixed. The after image shows the problem has been completely resolved.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'Issue clearly fixed. The after image shows the problem has been completely resolved.'[39m
}

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle empty string title (treated as missing)
🤖 GROQ VERIFICATION - Starting fix verification request

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle empty string title (treated as missing)
🤖 GROQ VERIFICATION - Request data: {
  title: [32m''[39m,
  description: [32m'Test issue: broken street light'[39m,
  beforeImageLength: [33m36[39m,
  afterImageLength: [33m35[39m
}
🤖 GROQ VERIFICATION - Sending request to Groq with prompt: You are an expert at analyzing before and after images to determine if community issues have been properly fixed.

TASK: Analyze these before/after images for the reported issue and provide a confiden...
🤖 GROQ VERIFICATION - API Key exists: [33mtrue[39m

stdout | tests/integration/verify-fix-api.test.ts > POST /api/verify-fix - Integration Tests > Edge Cases > should handle empty string title (treated as missing)
🤖 GROQ VERIFICATION - Raw response from Groq: CONFIDENCE: 9
REASONING: Issue clearly fixed. The after image shows the problem has been completely resolved.
🤖 GROQ VERIFICATION - Parsed response: {
  confidence: [33m9[39m,
  reasoning: [32m'Issue clearly fixed. The after image shows the problem has been completely resolved.'[39m
}

 ✓ tests/integration/verify-fix-api.test.ts (20 tests) 72ms
stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should create Kind 1 event with minimal required fields
[NOSTR] Publishing event to relays: mock-event-id-1761880166507

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should create Kind 1 event with minimal required fields
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should create Kind 1 event with all optional fields
[NOSTR] Publishing event to relays: mock-event-id-1761880166510

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should create Kind 1 event with all optional fields
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should format event content with city when provided
[NOSTR] Publishing event to relays: mock-event-id-1761880166511

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should format event content with city when provided
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should format event content with location fallback
[NOSTR] Publishing event to relays: mock-event-id-1761880166514

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should format event content with location fallback
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should include reward in formatted content
[NOSTR] Publishing event to relays: mock-event-id-1761880166515

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should include reward in formatted content
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should include Ganamos post URL in content
[NOSTR] Publishing event to relays: mock-event-id-1761880166516

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should include Ganamos post URL in content
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should include hashtags in content
[NOSTR] Publishing event to relays: mock-event-id-1761880166517

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Construction > should include hashtags in content
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should include required tags: ganamos, bitcoin, reference URL
[NOSTR] Publishing event to relays: mock-event-id-1761880166518

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should include required tags: ganamos, bitcoin, reference URL
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should add geolocation tag when coordinates provided
[NOSTR] Publishing event to relays: mock-event-id-1761880166519

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should add geolocation tag when coordinates provided
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should add image metadata tag when imageUrl provided
[NOSTR] Publishing event to relays: mock-event-id-1761880166520

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should add image metadata tag when imageUrl provided
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should add city tag when city provided
[NOSTR] Publishing event to relays: mock-event-id-1761880166521

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should add city tag when city provided
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should normalize city tag by removing spaces and lowercasing
[NOSTR] Publishing event to relays: mock-event-id-1761880166522

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should normalize city tag by removing spaces and lowercasing
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should not add geolocation tag when only latitude provided
[NOSTR] Publishing event to relays: mock-event-id-1761880166522

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should not add geolocation tag when only latitude provided
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should not add geolocation tag when only longitude provided
[NOSTR] Publishing event to relays: mock-event-id-1761880166523

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Tag Generation > should not add geolocation tag when only longitude provided
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Signing > should call finalizeEvent with correct event template structure
[NOSTR] Publishing event to relays: mock-event-id-1761880166523

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Signing > should call finalizeEvent with correct event template structure
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Signing > should call finalizeEvent with Uint8Array secret key
[NOSTR] Publishing event to relays: mock-event-id-1761880166524

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Signing > should call finalizeEvent with Uint8Array secret key
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Signing > should use created_at timestamp close to current time
[NOSTR] Publishing event to relays: mock-event-id-1761880166524

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Event Signing > should use created_at timestamp close to current time
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should return success when all relays confirm
[NOSTR] Publishing event to relays: mock-event-id-1761880166525

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should return success when all relays confirm
[NOSTR] Published to 5/5 relays (0 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should return success when at least 1 relay confirms
[NOSTR] Publishing event to relays: mock-event-id-1761880166525

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should return success when at least 1 relay confirms
[NOSTR] Published to 1/5 relays (4 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should return failure when all relays fail
[NOSTR] Publishing event to relays: mock-event-id-1761880166526

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should return failure when all relays fail
[NOSTR] Published to 0/5 relays (5 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should use Promise.allSettled pattern to handle mixed relay results
[NOSTR] Publishing event to relays: mock-event-id-1761880166527

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Relay Publishing > should use Promise.allSettled pattern to handle mixed relay results
[NOSTR] Published to 3/5 relays (2 failed)

stderr | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Error Handling > should throw error when NOSTR_PRIVATE_KEY not configured
[NOSTR] Error publishing to Nostr: Error: NOSTR_PRIVATE_KEY not configured in environment variables
    at getGanamosNostrKey [90m(/workspaces/ganamos/[39mlib/nostr.ts:34:11[90m)[39m
    at postToNostr [90m(/workspaces/ganamos/[39mlib/nostr.ts:143:16[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/nostr.test.ts:393:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Error Handling > should handle error when NOSTR_PRIVATE_KEY is invalid format
[NOSTR] Error publishing to Nostr: Error: NOSTR_PRIVATE_KEY must be a 64-character hex string (32 bytes)
    at getGanamosNostrKey [90m(/workspaces/ganamos/[39mlib/nostr.ts:40:11[90m)[39m
    at postToNostr [90m(/workspaces/ganamos/[39mlib/nostr.ts:143:16[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/nostr.test.ts:411:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Error Handling > should return error object when publishing fails
[NOSTR] Publishing event to relays: mock-event-id-1761880166533

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Error Handling > should return error object when publishing fails
[NOSTR] Published to 0/5 relays (5 failed)

stderr | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > postToNostr() > Error Handling > should catch and return error when finalizeEvent throws
[NOSTR] Error publishing to Nostr: Error: Signing failed
    at [90m/workspaces/ganamos/[39mtests/integration/nostr.test.ts:451:17
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at postToNostr [90m(/workspaces/ganamos/[39mlib/nostr.ts:193:25[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/nostr.test.ts:454:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > Connection Pool Management > should reuse singleton pool across multiple calls
[NOSTR] Publishing event to relays: mock-event-id-1761880166538

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > Connection Pool Management > should reuse singleton pool across multiple calls
[NOSTR] Published to 0/5 relays (5 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > Connection Pool Management > should reuse singleton pool across multiple calls
[NOSTR] Publishing event to relays: mock-event-id-1761880166539

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > Connection Pool Management > should reuse singleton pool across multiple calls
[NOSTR] Published to 0/5 relays (5 failed)

stdout | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > Connection Pool Management > should close pool when closeNostrPool called
[NOSTR] Publishing event to relays: mock-event-id-1761880166539

stderr | tests/integration/nostr.test.ts > lib/nostr.ts - Nostr Integration > Connection Pool Management > should close pool when closeNostrPool called
[NOSTR] Error publishing to Nostr: TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
    at Function.allSettled (<anonymous>)
    at postToNostr [90m(/workspaces/ganamos/[39mlib/nostr.ts:202:35[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/nostr.test.ts:527:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

 ✓ tests/integration/nostr.test.ts (31 tests) 48ms
stderr | tests/integration/device-removal.test.ts > Device Removal API Integration Tests > Error Handling > should return 500 when database deletion fails
Error deleting device: { message: [32m'Database connection failed'[39m, code: [32m'CONNECTION_ERROR'[39m }

stderr | tests/integration/device-removal.test.ts > Device Removal API Integration Tests > Error Handling > should return 500 when unexpected exception occurs during deletion
Error in device remove API: Error: Unexpected database error
    at Object.<anonymous> [90m(/workspaces/ganamos/[39mtests/integration/device-removal.test.ts:311:15[90m)[39m
    at Object.mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at Object.spy [as from] [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at Module.POST [90m(/workspaces/ganamos/[39mapp/api/device/remove/route.ts:43:8[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/device-removal.test.ts:316:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stderr | tests/integration/device-removal.test.ts > Device Removal API Integration Tests > Error Handling > should handle database timeout errors
Error deleting device: { message: [32m'Query timeout'[39m, code: [32m'TIMEOUT'[39m }

stderr | tests/integration/device-removal.test.ts > Device Removal API Integration Tests > Error Handling > should handle malformed JSON in request body
Error in device remove API: SyntaxError: Unexpected token 'i', "invalid-json{" is not valid JSON
    at JSON.parse (<anonymous>)
[90m    at parseJSONFromBytes (node:internal/deps/undici/undici:5738:19)[39m
[90m    at successSteps (node:internal/deps/undici/undici:5719:27)[39m
[90m    at fullyReadBody (node:internal/deps/undici/undici:4609:9)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
[90m    at consumeBody (node:internal/deps/undici/undici:5728:7)[39m
    at Module.POST [90m(/workspaces/ganamos/[39mapp/api/device/remove/route.ts:28:18[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/device-removal.test.ts:352:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stderr | tests/integration/device-removal.test.ts > Device Removal API Integration Tests > Response Structure Validation > should return proper error response structure for database failure
Error deleting device: { message: [32m'Database error'[39m }

stderr | tests/integration/device-removal.test.ts > Device Removal API Integration Tests > Response Structure Validation > should not leak sensitive error details in production
Error deleting device: {
  message: [32m'Internal server error with sensitive details'[39m,
  hint: [32m'Check database credentials'[39m,
  details: [32m'Connection string: postgres://user:password@host/db'[39m
}

 ✓ tests/integration/device-removal.test.ts (23 tests) 44ms
stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Authentication > should return 401 when session is missing
[Withdraw API] session: [1mnull[22m [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Authentication > should return 401 when session error occurs
[Withdraw API] session: [1mnull[22m Error: Session error
    at [90m/workspaces/ganamos/[39mtests/integration/api/wallet/withdraw.test.ts:159:16
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Input Validation > should return 400 when paymentRequest is missing
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Input Validation > should return 400 when amount is missing
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Input Validation > should return 400 when amount is zero
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Input Validation > should return 400 when amount is negative
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Input Validation > should return 400 when amount is NaN
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Balance Verification > should return 404 when user profile is not found
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Balance Verification > should return 400 when balance is insufficient
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Transaction Creation > should return 500 when transaction creation fails
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stderr | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Transaction Creation > should return 500 when transaction creation fails
Error creating transaction: { message: [32m'Database error'[39m }

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should successfully process withdrawal with valid invoice and sufficient balance
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should successfully process withdrawal with valid invoice and sufficient balance
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should successfully process withdrawal with valid invoice and sufficient balance
[Withdraw API] Payment result: {
  "success": true,
  "paymentHash": "payment-hash-abc123",
  "data": {}
}

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should return 500 and update transaction to failed when payment fails
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should return 500 and update transaction to failed when payment fails
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should return 500 and update transaction to failed when payment fails
[Withdraw API] Payment result: {
  "success": false,
  "error": "Insufficient node balance",
  "details": {
    "code": "INSUFFICIENT_FUNDS"
  }
}
[Withdraw API] Payment failed, updating transaction to failed

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle payment network timeout errors
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle payment network timeout errors
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle payment network timeout errors
[Withdraw API] Payment result: {
  "success": false,
  "error": "Network timeout",
  "details": {
    "timeout": true
  }
}
[Withdraw API] Payment failed, updating transaction to failed

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should not send email notification for ganamos.app email addresses
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should not send email notification for ganamos.app email addresses
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should not send email notification for ganamos.app email addresses
[Withdraw API] Payment result: {
  "success": true,
  "paymentHash": "payment-hash-abc123",
  "data": {}
}

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle email notification failures gracefully
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle email notification failures gracefully
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle email notification failures gracefully
[Withdraw API] Payment result: {
  "success": true,
  "paymentHash": "payment-hash-abc123",
  "data": {}
}

stderr | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Payment Processing > should handle email notification failures gracefully
Error sending Bitcoin sent email: Error: Email service unavailable
    at [90m/workspaces/ganamos/[39mtests/integration/api/wallet/withdraw.test.ts:558:57
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Error Handling > should return 500 with generic error message on unexpected errors
Unexpected error in withdraw API: Error: Unexpected database error
    at [90m/workspaces/ganamos/[39mtests/integration/api/wallet/withdraw.test.ts:590:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Error Handling > should handle JSON parsing errors
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stderr | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Error Handling > should handle JSON parsing errors
Unexpected error in withdraw API: Error: Invalid JSON
    at [90m/workspaces/ganamos/[39mtests/integration/api/wallet/withdraw.test.ts:610:41
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle amount-less invoices correctly
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle amount-less invoices correctly
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle amount-less invoices correctly
[Withdraw API] Payment result: {
  "success": true,
  "paymentHash": "payment-hash-abc123",
  "data": {}
}

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle exact balance withdrawal
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle exact balance withdrawal
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle exact balance withdrawal
[Withdraw API] Payment result: {
  "success": true,
  "paymentHash": "payment-hash-abc123",
  "data": {}
}

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle large withdrawal amounts
[Withdraw API] session: {
  user: { id: [32m'user-123'[39m },
  access_token: [32m'mock-token'[39m,
  token_type: [32m'bearer'[39m,
  expires_in: [33m3600[39m,
  expires_at: [33m1761883767624[39m,
  refresh_token: [32m'mock-refresh-token'[39m
} [1mnull[22m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle large withdrawal amounts
[Withdraw API] About to pay invoice: lnbc1000n1pj9x7xmpp5abc123 amount: [33m1000000[39m

stdout | tests/integration/api/wallet/withdraw.test.ts > POST /api/wallet/withdraw > Edge Cases > should handle large withdrawal amounts
[Withdraw API] Payment result: {
  "success": true,
  "paymentHash": "payment-hash-abc123",
  "data": {}
}

 ✓ tests/integration/api/wallet/withdraw.test.ts (20 tests) 47ms
stderr | tests/integration/api/device/list.test.ts > GET /api/device/list > Data Retrieval > should return 500 when devices query fails
Error fetching devices: { message: [32m'Database connection failed'[39m }

stderr | tests/integration/api/device/list.test.ts > GET /api/device/list > Edge Cases > should return 500 when unexpected error occurs
Error in device list API: Error: Unexpected database error
    at [90m/workspaces/ganamos/[39mtests/integration/api/device/list.test.ts:383:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

 ✓ tests/integration/api/device/list.test.ts (22 tests) 40ms
stderr | tests/integration/posts-api.test.ts > POST /api/posts Integration Tests > Error Handling > should return 500 with generic error message on unexpected errors
Error in /api/posts: Error: Unexpected parsing error
    at [90m/workspaces/ganamos/[39mtests/integration/posts-api.test.ts:576:15
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at Module.POST [90m(/workspaces/ganamos/[39mapp/api/posts/route.ts:48:23[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/posts-api.test.ts:581:30
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m

stderr | tests/integration/posts-api.test.ts > POST /api/posts Integration Tests > Error Handling > should handle JSON parsing errors gracefully
Error in /api/posts: Error: Invalid JSON
    at [90m/workspaces/ganamos/[39mtests/integration/posts-api.test.ts:590:41
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

 ✓ tests/integration/posts-api.test.ts (36 tests) 40ms
stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Request Validation > should accept request with only required fields
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Successful Publishing > should call postToNostr with minimal required parameters
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Successful Publishing > should call postToNostr with all optional parameters
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Successful Publishing > should return 200 with success response
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Successful Publishing > should return eventId from postToNostr result
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Successful Publishing > should handle undefined optional parameters
[NOSTR] Successfully published post test-post-id to Nostr

stderr | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Publishing Failures > should return 500 when postToNostr returns failure
[NOSTR] Failed to publish post test-post-id: All relays failed

stderr | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Publishing Failures > should return 500 when postToNostr throws error
[NOSTR] Error in publish-post route: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/integration/nostr-api.test.ts:152:45
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Publishing Failures > should handle NOSTR_PRIVATE_KEY not configured error
[NOSTR] Failed to publish post test-post-id: NOSTR_PRIVATE_KEY not configured in environment variables

stderr | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Publishing Failures > should handle relay publishing failures gracefully
[NOSTR] Failed to publish post test-post-id: Failed to publish to Nostr relays

stderr | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Error Response Format > should return consistent error structure for publishing failures
[NOSTR] Failed to publish post test-post-id: Publishing failed

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Error Response Format > should return consistent success structure
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Parameter Forwarding > should forward reward parameter correctly
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Parameter Forwarding > should forward geolocation parameters correctly
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Parameter Forwarding > should forward imageUrl parameter correctly
[NOSTR] Successfully published post test-post-id to Nostr

stderr | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Edge Cases > should handle malformed JSON request body
[NOSTR] Error in publish-post route: SyntaxError: Unexpected token 'i', "invalid json" is not valid JSON
    at JSON.parse (<anonymous>)
[90m    at parseJSONFromBytes (node:internal/deps/undici/undici:5738:19)[39m
[90m    at successSteps (node:internal/deps/undici/undici:5719:27)[39m
[90m    at fullyReadBody (node:internal/deps/undici/undici:4609:9)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
[90m    at consumeBody (node:internal/deps/undici/undici:5728:7)[39m
    at POST [90m(/workspaces/ganamos/[39mapp/api/nostr/publish-post/route.ts:10:18[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/nostr-api.test.ts:276:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Edge Cases > should handle very long title and description
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Edge Cases > should handle special characters in title and description
[NOSTR] Successfully published post test-post-id to Nostr

stdout | tests/integration/nostr-api.test.ts > POST /api/nostr/publish-post > Edge Cases > should handle numeric postId
[NOSTR] Successfully published post 12345 to Nostr

 ✓ tests/integration/nostr-api.test.ts (25 tests) 42ms
stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Authentication & Authorization > should return 200 when CRON_SECRET is valid
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Authentication & Authorization > should return 200 when CRON_SECRET is valid
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Authentication & Authorization > should return 200 when CRON_SECRET is valid
Successfully stored Bitcoin price: {
  id: [32m'test-uuid-123'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.957Z'[39m,
  updated_at: [32m'2025-10-31T03:09:29.957Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Authentication & Authorization > should return 200 when CRON_SECRET is valid
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should successfully fetch price from DIA Data API and insert to database
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should successfully fetch price from DIA Data API and insert to database
Fetched BTC price: $52000.75

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should successfully fetch price from DIA Data API and insert to database
Successfully stored Bitcoin price: {
  id: [32m'uuid-123'[39m,
  price: [33m52000.75[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2024-01-15T10:30:00Z'[39m,
  updated_at: [32m'2024-01-15T10:30:00Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should successfully fetch price from DIA Data API and insert to database
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should return 500 when external API returns non-200 status
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should return 500 when external API returns non-200 status
Error in Bitcoin price cron job: Error: DIA Data API request failed with status 503
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/cron/update-bitcoin-price/route.ts:31:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:124:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should return 500 when external API throws network error
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should return 500 when external API throws network error
Error in Bitcoin price cron job: Error: Connection timeout
    at Module.mockDIAApiNetworkFailure [90m(/workspaces/ganamos/[39mtests/integration/helpers/bitcoin-price-cron-mocks.ts:45:44[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:134:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should validate price data type and return 500 for invalid types
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should validate price data type and return 500 for invalid types
Error in Bitcoin price cron job: Error: Invalid price data received: null
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/cron/update-bitcoin-price/route.ts:38:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:148:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should reject non-numeric price values
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should reject non-numeric price values
Error in Bitcoin price cron job: Error: Invalid price data received: 50000
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/cron/update-bitcoin-price/route.ts:38:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:160:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should reject undefined price values
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > External API Integration > should reject undefined price values
Error in Bitcoin price cron job: Error: Invalid price data received: null
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/cron/update-bitcoin-price/route.ts:38:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:172:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should insert price with correct currency and source
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should insert price with correct currency and source
Fetched BTC price: $48500.25

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should insert price with correct currency and source
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m48500.25[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.983Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should insert price with correct currency and source
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when database insertion fails
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when database insertion fails
Fetched BTC price: $50000.00

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when database insertion fails
Error inserting Bitcoin price: { message: [32m'Database connection failed'[39m }

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when Supabase URL is missing
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when Supabase URL is missing
Fetched BTC price: $50000.00

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when Supabase URL is missing
Supabase configuration missing

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when service role key is missing
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when service role key is missing
Supabase configuration missing

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should return 500 when service role key is missing
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should call cleanup function after successful insertion
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should call cleanup function after successful insertion
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should call cleanup function after successful insertion
Successfully stored Bitcoin price: {
  id: [32m'test-uuid-123'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.987Z'[39m,
  updated_at: [32m'2025-10-31T03:09:29.987Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should call cleanup function after successful insertion
Cleaned up 3 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should not fail request when cleanup function fails
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should not fail request when cleanup function fails
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should not fail request when cleanup function fails
Successfully stored Bitcoin price: {
  id: [32m'test-uuid-123'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.988Z'[39m,
  updated_at: [32m'2025-10-31T03:09:29.988Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should handle cleanup function returning zero deleted records
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should handle cleanup function returning zero deleted records
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Database Operations > should handle cleanup function returning zero deleted records
Successfully stored Bitcoin price: {
  id: [32m'test-uuid-123'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.989Z'[39m,
  updated_at: [32m'2025-10-31T03:09:29.989Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return complete success response structure
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return complete success response structure
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return complete success response structure
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2024-01-15T12:00:00Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return complete success response structure
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return error response with details on failure
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return error response with details on failure
Error in Bitcoin price cron job: Error: Network timeout
    at Module.mockDIAApiNetworkFailure [90m(/workspaces/ganamos/[39mtests/integration/helpers/bitcoin-price-cron-mocks.ts:45:44[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:322:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should preserve timestamp format from database
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should preserve timestamp format from database
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should preserve timestamp format from database
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2024-01-15T10:30:45.123Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should preserve timestamp format from database
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return numeric price value in response
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return numeric price value in response
Fetched BTC price: $52345.67

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return numeric price value in response
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m52345.67[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.992Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Response Validation > should return numeric price value in response
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very high Bitcoin prices correctly
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very high Bitcoin prices correctly
Fetched BTC price: $150000.99

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very high Bitcoin prices correctly
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m150000.99[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.995Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very high Bitcoin prices correctly
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very low Bitcoin prices correctly
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very low Bitcoin prices correctly
Fetched BTC price: $0.01

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very low Bitcoin prices correctly
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m0.01[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.996Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should handle very low Bitcoin prices correctly
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should reject zero price values
Fetching Bitcoin price from DIA Data...

stderr | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should reject zero price values
Error in Bitcoin price cron job: Error: Invalid price data received: 0
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/cron/update-bitcoin-price/route.ts:38:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price-cron.test.ts:424:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should maintain decimal precision for financial calculations
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should maintain decimal precision for financial calculations
Fetched BTC price: $50123.46

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should maintain decimal precision for financial calculations
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m50123.456789[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.997Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should maintain decimal precision for financial calculations
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently use USD currency
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently use USD currency
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently use USD currency
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.998Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently use USD currency
Cleaned up 5 old price records

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently attribute source to diadata.org
Fetching Bitcoin price from DIA Data...

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently attribute source to diadata.org
Fetched BTC price: $50000.00

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently attribute source to diadata.org
Successfully stored Bitcoin price: {
  id: [32m'test-id'[39m,
  price: [33m50000[39m,
  currency: [32m'USD'[39m,
  source: [32m'diadata.org'[39m,
  created_at: [32m'2025-10-31T03:09:29.999Z'[39m
}

stdout | tests/integration/bitcoin-price-cron.test.ts > Bitcoin Price Cron Endpoint Integration Tests > Edge Cases and Data Consistency > should consistently attribute source to diadata.org
Cleaned up 5 old price records

 ✓ tests/integration/bitcoin-price-cron.test.ts (28 tests | 1 skipped) 45ms
stderr | tests/integration/delete-child-account.test.ts > DELETE /api/delete-child-account - Integration Tests > Soft-Delete Behavior > should return 500 when soft-delete fails
Error soft deleting profile: { message: [32m'Database error'[39m }

stderr | tests/integration/delete-child-account.test.ts > DELETE /api/delete-child-account - Integration Tests > Cascading Behavior > should succeed even if connected_accounts deletion fails
Error deleting connection: { message: [32m'Delete failed'[39m }

stderr | tests/integration/delete-child-account.test.ts > DELETE /api/delete-child-account - Integration Tests > Environment Configuration > should return 500 when SUPABASE_SERVICE_ROLE_KEY is missing
SUPABASE_SERVICE_ROLE_KEY is not configured - cannot delete user from auth

stderr | tests/integration/delete-child-account.test.ts > DELETE /api/delete-child-account - Integration Tests > Error Handling > should handle unexpected errors gracefully
Error in delete-child-account route: Error: Unexpected database error
    at [90m/workspaces/ganamos/[39mtests/integration/delete-child-account.test.ts:749:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/delete-child-account.test.ts > DELETE /api/delete-child-account - Integration Tests > Error Handling > should handle malformed request body
Error in delete-child-account route: SyntaxError: Unexpected token 'i', "invalid json" is not valid JSON
    at JSON.parse (<anonymous>)
[90m    at parseJSONFromBytes (node:internal/deps/undici/undici:5738:19)[39m
[90m    at successSteps (node:internal/deps/undici/undici:5719:27)[39m
[90m    at fullyReadBody (node:internal/deps/undici/undici:4609:9)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
[90m    at consumeBody (node:internal/deps/undici/undici:5728:7)[39m
    at Module.POST [90m(/workspaces/ganamos/[39mapp/api/delete-child-account/route.ts:9:18[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/delete-child-account.test.ts:774:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

 ✓ tests/integration/delete-child-account.test.ts (16 tests) 36ms
stderr | tests/integration/device-registration.test.ts > Device Registration API Integration Tests > Error Handling > should handle database errors during device lookup
Error checking existing device: { message: [32m'Connection timeout'[39m, code: [32m'DB_ERROR'[39m }

stderr | tests/integration/device-registration.test.ts > Device Registration API Integration Tests > Error Handling > should handle errors during device update
Error updating device: { message: [32m'Update failed'[39m }

stderr | tests/integration/device-registration.test.ts > Device Registration API Integration Tests > Error Handling > should handle errors during device creation
Error creating device: { message: [32m'Insert failed'[39m }

stderr | tests/integration/device-registration.test.ts > Device Registration API Integration Tests > Error Handling > should handle unexpected errors gracefully
Error in device registration: Error: Unexpected error
    at Object.<anonymous> [90m(/workspaces/ganamos/[39mtests/integration/device-registration.test.ts:481:15[90m)[39m
    at Object.mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at Object.spy [as from] [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at Module.POST [90m(/workspaces/ganamos/[39mapp/api/device/register/route.ts:42:8[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/device-registration.test.ts:486:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

 ✓ tests/integration/device-registration.test.ts (27 tests) 31ms
stderr | tests/integration/device-update.test.ts > POST /api/device/update > Error Handling > returns 500 when database update fails
Error updating device: { message: [32m'Database connection failed'[39m, code: [32m'DB_ERROR'[39m }

stderr | tests/integration/device-update.test.ts > POST /api/device/update > Error Handling > returns 500 when unexpected error occurs
Error in device update API: Error: Unexpected error
    at [90m/workspaces/ganamos/[39mtests/integration/device-update.test.ts:494:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

 ✓ tests/integration/device-update.test.ts (20 tests) 35ms
stdout | tests/integration/geocoding.test.ts > reverseGeocode() > successful geocoding > should extract locality from address components
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > reverseGeocode() > successful geocoding > should extract administrative area from address components
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > reverseGeocode() > caching mechanism > should cache geocoding results for 1 hour
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > reverseGeocode() > caching mechanism > should cache geocoding results for 1 hour
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > reverseGeocode() > caching mechanism > should deduplicate concurrent requests for same location
Returning pending geocoding promise for: 37.775000,-122.419500
Returning pending geocoding promise for: 37.775000,-122.419500

stderr | tests/integration/geocoding.test.ts > reverseGeocode() > error handling > should fall back to coordinates when API key is missing
Reverse geocoding failed: Error: Google Maps API key not found
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:147:15
    at reverseGeocode [90m(/workspaces/ganamos/[39mlib/geocoding.ts:208:3[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/geocoding.test.ts:147:28
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | tests/integration/geocoding.test.ts > reverseGeocode() > error handling > should fall back to coordinates on network error
Reverse geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:150:30
    at reverseGeocode [90m(/workspaces/ganamos/[39mlib/geocoding.ts:208:3[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/geocoding.test.ts:159:28
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)

stdout | tests/integration/geocoding.test.ts > reverseGeocode() > error handling > should cache error fallbacks
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > reverseGeocode() > error handling > should cache error fallbacks
Returning cached geocoding result for: 37.774900,-122.419400

stderr | tests/integration/geocoding.test.ts > reverseGeocode() > error handling > should use 4 decimal precision for coordinate fallbacks
Reverse geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:150:30
    at reverseGeocode [90m(/workspaces/ganamos/[39mlib/geocoding.ts:208:3[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/geocoding.test.ts:182:28
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)

stderr | tests/integration/geocoding.test.ts > getStandardizedLocation() > error handling > should return null when API key is missing
Standardized geocoding failed: Error: Google Maps API key not found
    at getStandardizedLocation [90m(/workspaces/ganamos/[39mlib/geocoding.ts:223:13[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/geocoding.test.ts:288:28
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/geocoding.test.ts > getStandardizedLocation() > error handling > should return null on network error
Standardized geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at getStandardizedLocation [90m(/workspaces/ganamos/[39mlib/geocoding.ts:226:28[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/geocoding.test.ts:296:28
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > successful location retrieval > should return full LocationData with name and coordinates
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > successful location retrieval > should include standardized location components
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > successful location retrieval > should call reverseGeocode and getStandardizedLocation in parallel
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > caching and permission state > should save location to localStorage after successful retrieval
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > caching and permission state > should save granted permission state after successful retrieval
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > caching and permission state > should use cached location when permission granted and cache valid
Using cached location data

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > caching and permission state > should bypass cache when forceRefresh is true
Returning cached geocoding result for: 37.774900,-122.419400

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > permission handling > should throw error when user denies permission
Geolocation error in getCurrentLocationWithName: [33m1[39m User denied Geolocation

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > permission handling > should save denied permission state when user denies
Geolocation error in getCurrentLocationWithName: [33m1[39m User denied Geolocation

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > permission handling > should allow retry when forceRefresh is true even if previously denied
Returning cached geocoding result for: 37.774900,-122.419400

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should handle geolocation timeout
Geolocation failed but not due to permission denial

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should handle geolocation timeout
Geolocation error in getCurrentLocationWithName: [33m3[39m Geolocation timeout

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should resolve with coordinates when geocoding fails
Reverse geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:150:30
    at reverseGeocode [90m(/workspaces/ganamos/[39mlib/geocoding.ts:208:3[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:313:30
    at Object.<anonymous> [90m(/workspaces/ganamos/[39mtests/mocks/google-maps.ts:80:7[90m)[39m
    at Object.mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at Object.spy [as getCurrentPosition] [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:309:27

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should resolve with coordinates when geocoding fails
Standardized geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at getStandardizedLocation [90m(/workspaces/ganamos/[39mlib/geocoding.ts:226:28[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:314:38
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should still cache location even when geocoding fails
Reverse geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:150:30
    at reverseGeocode [90m(/workspaces/ganamos/[39mlib/geocoding.ts:208:3[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:313:30
    at Object.<anonymous> [90m(/workspaces/ganamos/[39mtests/mocks/google-maps.ts:80:7[90m)[39m
    at Object.mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at Object.spy [as getCurrentPosition] [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:309:27

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should still cache location even when geocoding fails
Standardized geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at getStandardizedLocation [90m(/workspaces/ganamos/[39mlib/geocoding.ts:226:28[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:314:38
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should save granted permission even when geocoding fails
Reverse geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:150:30
    at reverseGeocode [90m(/workspaces/ganamos/[39mlib/geocoding.ts:208:3[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:313:30
    at Object.<anonymous> [90m(/workspaces/ganamos/[39mtests/mocks/google-maps.ts:80:7[90m)[39m
    at Object.mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at Object.spy [as getCurrentPosition] [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:309:27

stderr | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > error handling > should save granted permission even when geocoding fails
Standardized geocoding failed: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at getStandardizedLocation [90m(/workspaces/ganamos/[39mlib/geocoding.ts:226:28[90m)[39m
    at [90m/workspaces/ganamos/[39mlib/geocoding.ts:314:38
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stdout | tests/integration/geocoding.test.ts > getCurrentLocationWithName() > clearLocationData() > should clear permission state and cached location
Location permission and cached data cleared

stderr | tests/integration/geocoding.test.ts > getTravelTimes() > should return null values on error
Error getting travel times: Error: Network error
    at [90m/workspaces/ganamos/[39mtests/mocks/google-maps.ts:27:13
    at mockCall [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/spy[24m/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///workspaces/ganamos/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at getTravelTimes [90m(/workspaces/ganamos/[39mlib/geocoding.ts:372:23[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/geocoding.test.ts:573:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m

 ✓ tests/integration/geocoding.test.ts (44 tests) 33ms
stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Accurate Data Retrieval > should use fallback query when RPC call fails
Function call failed, trying direct query: Error: RPC function not found
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:66:48
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Accurate Data Retrieval > should return 503 when no price data is available
No Bitcoin price found in database

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Accurate Data Retrieval > should return 503 when database returns null
No Bitcoin price found in database

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Correct Data Transformation > should calculate age_minutes correctly in fallback path
Function call failed, trying direct query: Error: RPC failed
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:149:48
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Correct Data Transformation > should set isStale to true for old data (> 60 minutes)
Bitcoin price is stale: 90 minutes old

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > CORS Headers Configuration > should include CORS headers on error responses in development
Error fetching Bitcoin price from database: { message: [32m'Database error'[39m }
Error in Bitcoin price API: Error: Failed to fetch price from database
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/bitcoin-price/route.ts:51:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:400:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
Error stack: Error: Failed to fetch price from database
    at Module.GET (/workspaces/ganamos/app/api/bitcoin-price/route.ts:51:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/integration/bitcoin-price.test.ts:400:24
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20
Supabase URL: Set
Service Key: Set

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should return 500 on database error
Error fetching Bitcoin price from database: { message: [32m'Connection timeout'[39m }
Error in Bitcoin price API: Error: Failed to fetch price from database
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/bitcoin-price/route.ts:51:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:416:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
Error stack: Error: Failed to fetch price from database
    at Module.GET (/workspaces/ganamos/app/api/bitcoin-price/route.ts:51:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/integration/bitcoin-price.test.ts:416:24
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20
Supabase URL: Set
Service Key: Set

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should handle both RPC and fallback query failures
Function call failed, trying direct query: Error: RPC failed
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:425:48
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should handle both RPC and fallback query failures
Error fetching Bitcoin price from database: { message: [32m'Query failed'[39m }
Error in Bitcoin price API: Error: Failed to fetch price from database
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/bitcoin-price/route.ts:51:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:439:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
Error stack: Error: Failed to fetch price from database
    at Module.GET (/workspaces/ganamos/app/api/bitcoin-price/route.ts:51:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/integration/bitcoin-price.test.ts:439:24
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20
Supabase URL: Set
Service Key: Set

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should include error stack trace in development mode
Function call failed, trying direct query: Error: Test error
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:449:48
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should include error stack trace in development mode
Error fetching Bitcoin price from database: { message: [32m'Query failed'[39m }
Error in Bitcoin price API: Error: Failed to fetch price from database
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/bitcoin-price/route.ts:51:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:463:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
Error stack: Error: Failed to fetch price from database
    at Module.GET (/workspaces/ganamos/app/api/bitcoin-price/route.ts:51:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/integration/bitcoin-price.test.ts:463:24
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20
Supabase URL: Set
Service Key: Set

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should not include error stack trace in production mode
Function call failed, trying direct query: Error: Test error
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:473:48
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/bitcoin-price.test.ts > Bitcoin Price API Integration Tests > Error Handling and Edge Cases > should not include error stack trace in production mode
Error fetching Bitcoin price from database: { message: [32m'Query failed'[39m }
Error in Bitcoin price API: Error: Failed to fetch price from database
    at Module.GET [90m(/workspaces/ganamos/[39mapp/api/bitcoin-price/route.ts:51:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/bitcoin-price.test.ts:487:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
Error stack: Error: Failed to fetch price from database
    at Module.GET (/workspaces/ganamos/app/api/bitcoin-price/route.ts:51:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/integration/bitcoin-price.test.ts:487:24
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20
Supabase URL: Set
Service Key: Set

 ✓ tests/integration/bitcoin-price.test.ts (26 tests) 34ms
stderr | tests/integration/child-account.test.ts > POST /api/child-account Integration Tests > Error Cases: Validation and Authentication > should handle auth user creation failures gracefully
Error creating child user: { message: [32m'Unable to validate email address: invalid format'[39m }

 ✓ tests/integration/child-account.test.ts (13 tests) 32ms
 ✓ tests/integration/delete-child-account-data-integrity.test.ts (7 tests) 20ms
stderr | tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > non-blocking error handling > should return success even when sender email fails
Error sending Bitcoin sent email: Error: Email service error
    at [90m/workspaces/ganamos/[39mtests/integration/api/email/transfer-notification.test.ts:419:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > non-blocking error handling > should return success even when receiver email fails
Error sending Bitcoin received email: Error: Email service error
    at [90m/workspaces/ganamos/[39mtests/integration/api/email/transfer-notification.test.ts:439:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > non-blocking error handling > should return success even when both emails fail
Error sending Bitcoin sent email: Error: Sender email failed
    at [90m/workspaces/ganamos/[39mtests/integration/api/email/transfer-notification.test.ts:459:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
Error sending Bitcoin received email: Error: Receiver email failed
    at [90m/workspaces/ganamos/[39mtests/integration/api/email/transfer-notification.test.ts:462:9
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > request body parsing > should handle JSON parsing errors
Error sending transfer notification emails: SyntaxError: Unexpected token 'i', "invalid json {" is not valid JSON
    at JSON.parse (<anonymous>)
[90m    at parseJSONFromBytes (node:internal/deps/undici/undici:5738:19)[39m
[90m    at successSteps (node:internal/deps/undici/undici:5719:27)[39m
[90m    at fullyReadBody (node:internal/deps/undici/undici:4609:9)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
[90m    at consumeBody (node:internal/deps/undici/undici:5728:7)[39m
    at Module.POST [90m(/workspaces/ganamos/[39mapp/api/email/transfer-notification/route.ts:11:18[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/integration/api/email/transfer-notification.test.ts:506:24
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20

 ❯ tests/integration/api/email/transfer-notification.test.ts (25 tests | 6 failed) 50ms
   ✓ POST /api/email/transfer-notification > parameter validation > should return 400 when fromUserId is missing 6ms
   ✓ POST /api/email/transfer-notification > parameter validation > should return 400 when toUserId is missing 1ms
   ✓ POST /api/email/transfer-notification > parameter validation > should return 400 when amount is missing 1ms
   ✓ POST /api/email/transfer-notification > parameter validation > should accept valid parameters 1ms
   ✓ POST /api/email/transfer-notification > parameter validation > should allow optional date parameter 2ms
   × POST /api/email/transfer-notification > dual notification sending > should send email to sender with internal transaction type 11ms
     → expected "sendBitcoinSentEmail" to be called with arguments: [ Array(1) ][90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m[2m  [[22m
[2m    {[22m
[2m      "amountSats": 15000,[22m
[32m-     "date": Any<Date>,[90m
[32m-     "toEmail": "sender@test.com",[90m
[31m+     "date": 2024-01-15T10:30:00.000Z,[90m
[31m+     "toEmail": "receiver@test.com",[90m
[2m      "toName": "Receiver Name",[22m
[2m      "transactionType": "internal",[22m
[32m-     "userName": "Sender Name",[90m
[31m+     "userName": "Receiver Name",[90m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   × POST /api/email/transfer-notification > dual notification sending > should send email to receiver with internal transaction type 2ms
     → expected "sendBitcoinReceivedEmail" to be called with arguments: [ { toEmail: 'bob@test.com', …(5) } ][90m

Received: 

[1m  1st sendBitcoinReceivedEmail call:

[22m[2m  [[22m
[2m    {[22m
[2m      "amountSats": 25000,[22m
[32m-     "date": Any<Date>,[90m
[32m-     "fromName": "Alice",[90m
[31m+     "date": 2024-01-15T10:30:00.000Z,[90m
[31m+     "fromName": "Bob",[90m
[2m      "toEmail": "bob@test.com",[22m
[2m      "transactionType": "internal",[22m
[2m      "userName": "Bob",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ POST /api/email/transfer-notification > dual notification sending > should send both sender and receiver emails 1ms
   ✓ POST /api/email/transfer-notification > dual notification sending > should use provided date for email timestamp 2ms
   × POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send sender email when sender has @ganamos.app address 2ms
     → expected "sendBitcoinSentEmail" to not be called at all, but actually been called 1 times[90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m    Array [
      Object {
        "amountSats": 10000,
        "date": 2024-01-15T10:30:00.000Z,
        "toEmail": "external@test.com",
        "toName": "External User",
        "transactionType": "internal",
        "userName": "External User",
      },
    ]
[39m[90m

Number of calls: [1m1[22m
[39m
   × POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send receiver email when receiver has @ganamos.app address 1ms
     → expected "sendBitcoinSentEmail" to be called 1 times, but got 0 times
   ✓ POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send any emails when both users have @ganamos.app addresses 1ms
   × POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send email when sender email is null 1ms
     → expected "sendBitcoinSentEmail" to not be called at all, but actually been called 1 times[90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m    Array [
      Object {
        "amountSats": 10000,
        "date": 2024-01-15T10:30:00.000Z,
        "toEmail": "receiver@test.com",
        "toName": "Receiver",
        "transactionType": "internal",
        "userName": "Receiver",
      },
    ]
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should send emails for valid external addresses 1ms
   ✓ POST /api/email/transfer-notification > profile fetching > should use service role key for admin access 1ms
   ✓ POST /api/email/transfer-notification > profile fetching > should fetch sender profile with correct user ID 1ms
   ✓ POST /api/email/transfer-notification > profile fetching > should fetch receiver profile with correct user ID 1ms
   × POST /api/email/transfer-notification > profile fetching > should handle missing sender profile gracefully 1ms
     → expected "sendBitcoinSentEmail" to not be called at all, but actually been called 1 times[90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m    Array [
      Object {
        "amountSats": 10000,
        "date": 2024-01-15T10:30:00.000Z,
        "toEmail": "receiver@test.com",
        "toName": "Receiver",
        "transactionType": "internal",
        "userName": "Receiver",
      },
    ]
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ POST /api/email/transfer-notification > profile fetching > should handle missing receiver profile gracefully 1ms
   ✓ POST /api/email/transfer-notification > non-blocking error handling > should return success even when sender email fails 2ms
   ✓ POST /api/email/transfer-notification > non-blocking error handling > should return success even when receiver email fails 2ms
   ✓ POST /api/email/transfer-notification > non-blocking error handling > should return success even when both emails fail 2ms
   ✓ POST /api/email/transfer-notification > non-blocking error handling > should handle Supabase errors gracefully 1ms
   ✓ POST /api/email/transfer-notification > request body parsing > should handle JSON parsing errors 2ms
   ✓ POST /api/email/transfer-notification > request body parsing > should handle empty request body 1ms
 ✓ tests/integration/api/user/balance-with-transactions.test.ts (16 tests) 6ms
stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should send email with correct recipient and subject
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:27:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include formatted amount in subject line
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:37:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should use first name only in greeting
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:47:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should show "via Lightning" for deposit transactions
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:58:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should show sender name for internal transactions
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:68:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include BTC and sats amount in content
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:80:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include formatted date in content
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:91:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include wallet link
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:100:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include sender detail row for internal transfers
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:108:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should not include sender detail row for deposits
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:120:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should handle large amounts correctly
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:130:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should send email with correct recipient and subject
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:150:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should include formatted amount in subject line
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:160:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should show "via Lightning" for withdrawal transactions
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:170:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should show receiver name for internal transactions
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:180:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should include receiver detail row for internal transfers
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:192:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should not include receiver detail row for withdrawals
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:204:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should use first name only in greeting
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:214:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should include wallet link
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:224:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should send email with correct recipient and subject
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:244:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should include issue title in email content
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:254:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should include fixer name in content
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:261:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should include formatted reward amount
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:268:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should include post link with correct post ID
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:275:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should use first name only in greeting
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:283:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should include formatted date
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendIssueFixedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:427:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:293:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > email HTML structure > should include gradient header styling
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:304:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > email HTML structure > should include CTA button with proper styling
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinSentEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:251:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:317:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > email HTML structure > should include responsive styling
Error getting Bitcoin price: Error: [vitest] No "createServerSupabaseClient" export is defined on the "@/lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///workspaces/ganamos/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at getBitcoinPriceUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:10:22[90m)[39m
    at convertSatsToUSD [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:37:26[90m)[39m
    at Module.sendBitcoinReceivedEmail [90m(/workspaces/ganamos/[39mlib/transaction-emails.ts:76:27[90m)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/transaction-emails.test.ts:331:13
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>) {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"@/lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

 ❯ tests/unit/lib/transaction-emails.test.ts (29 tests | 7 failed) 99ms
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should send email with correct recipient and subject 30ms
   × lib/transaction-emails > sendBitcoinReceivedEmail > should include formatted amount in subject line 9ms
     → expected "sendEmail" to be called with arguments: [ Any<String>, …(2) ][90m

Received: 

[1m  1st sendEmail call:

[22m[2m  [[22m
[32m-   Any<String>,[90m
[32m-   StringContaining "10,000 sats",[90m
[32m-   Any<String>,[90m
[31m+   "recipient@example.com",[90m
[31m+   "Bitcoin Received - 10k sats",[90m
[31m+   "[90m
[31m+     <!DOCTYPE html>[90m
[31m+     <html>[90m
[31m+     <head>[90m
[31m+       <meta charset=\"utf-8\">[90m
[31m+       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">[90m
[31m+       <style>[90m
[31m+         body {[90m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[90m
[31m+           line-height: 1.6;[90m
[31m+           color: #333;[90m
[31m+           max-width: 600px;[90m
[31m+           margin: 0 auto;[90m
[31m+           padding: 20px;[90m
[31m+           background-color: #f5f5f5;[90m
[31m+         }[90m
[31m+         .container {[90m
[31m+           background-color: #ffffff;[90m
[31m+           border-radius: 8px;[90m
[31m+           overflow: hidden;[90m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[90m
[31m+         }[90m
[31m+         .header {[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           padding: 30px 20px;[90m
[31m+           text-align: center;[90m
[31m+         }[90m
[31m+         .header h1 {[90m
[31m+           color: #ffffff;[90m
[31m+           margin: 0;[90m
[31m+           font-size: 24px;[90m
[31m+           font-weight: 600;[90m
[31m+         }[90m
[31m+         .content {[90m
[31m+           padding: 30px 20px;[90m
[31m+         }[90m
[31m+         .greeting {[90m
[31m+           font-size: 16px;[90m
[31m+           margin-bottom: 20px;[90m
[31m+         }[90m
[31m+         .details {[90m
[31m+           background-color: #f9fafb;[90m
[31m+           border-radius: 6px;[90m
[31m+           padding: 20px;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         .detail-row {[90m
[31m+           display: flex;[90m
[31m+           justify-content: space-between;[90m
[31m+           padding: 8px 0;[90m
[31m+           border-bottom: 1px solid #e5e7eb;[90m
[31m+           gap: 16px;[90m
[31m+         }[90m
[31m+         .detail-row:last-child {[90m
[31m+           border-bottom: none;[90m
[31m+         }[90m
[31m+         .detail-label {[90m
[31m+           font-weight: 600;[90m
[31m+           color: #6b7280;[90m
[31m+           flex-shrink: 0;[90m
[31m+         }[90m
[31m+         .detail-value {[90m
[31m+           color: #111827;[90m
[31m+           text-align: right;[90m
[31m+         }[90m
[31m+         .cta-button {[90m
[31m+           display: inline-block;[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           color: #ffffff !important;[90m
[31m+           text-decoration: none;[90m
[31m+           padding: 12px 30px;[90m
[31m+           border-radius: 6px;[90m
[31m+           font-weight: 600;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         a.cta-button {[90m
[31m+           color: #ffffff !important;[90m
[31m+         }[90m
[31m+         .footer {[90m
[31m+           text-align: center;[90m
[31m+           padding: 20px;[90m
[31m+           color: #6b7280;[90m
[31m+           font-size: 14px;[90m
[31m+         }[90m
[31m+         .footer a {[90m
[31m+           color: #16a349;[90m
[31m+           text-decoration: none;[90m
[31m+         }[90m
[31m+       </style>[90m
[31m+     </head>[90m
[31m+     <body>[90m
[31m+       <div class=\"container\">[90m
[31m+         <div class=\"header\">[90m
[31m+           <h1>Bitcoin Received</h1>[90m
[31m+         </div>[90m
[31m+         <div class=\"content\">[90m
[31m+           <div class=\"greeting\">[90m
[31m+             Hello John,[90m
[31m+           </div>[90m
[31m+           <p>[90m
[31m+             You received Bitcoin via Lightning.[90m
[31m+           </p>[90m
[31m+           <div class=\"details\">[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Amount:</span>[90m
[31m+               <span class=\"detail-value\">10k sats (USD price unavailable)</span>[90m
[31m+             </div>[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Date:</span>[90m
[31m+               <span class=\"detail-value\">Jan 15, 2024, 10:30 AM UTC</span>[90m
[31m+             </div>[90m
[31m+             [90m
[31m+           </div>[90m
[31m+           <center>[90m
[31m+             <a href=\"https://www.ganamos.earth/wallet\" class=\"cta-button\">View Wallet</a>[90m
[31m+           </center>[90m
[31m+         </div>[90m
[31m+         <div class=\"footer\">[90m
[31m+           <p>[90m
[31m+             This is an automated notification from <a href=\"https://www.ganamos.earth\">Ganamos</a>.[90m
[31m+           </p>[90m
[31m+         </div>[90m
[31m+       </div>[90m
[31m+     </body>[90m
[31m+     </html>[90m
[31m+   ",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should use first name only in greeting 1ms
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should show "via Lightning" for deposit transactions 1ms
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should show sender name for internal transactions 1ms
   × lib/transaction-emails > sendBitcoinReceivedEmail > should include BTC and sats amount in content 9ms
     → expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain '0.00050000 BTC'
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should include formatted date in content 1ms
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should include wallet link 1ms
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should include sender detail row for internal transfers 2ms
   ✓ lib/transaction-emails > sendBitcoinReceivedEmail > should not include sender detail row for deposits 1ms
   × lib/transaction-emails > sendBitcoinReceivedEmail > should handle large amounts correctly 5ms
     → expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain '1.00000000 BTC'
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should send email with correct recipient and subject 1ms
   × lib/transaction-emails > sendBitcoinSentEmail > should include formatted amount in subject line 2ms
     → expected "sendEmail" to be called with arguments: [ Any<String>, …(2) ][90m

Received: 

[1m  1st sendEmail call:

[22m[2m  [[22m
[32m-   Any<String>,[90m
[32m-   StringContaining "25,000 sats",[90m
[32m-   Any<String>,[90m
[31m+   "sender@example.com",[90m
[31m+   "Bitcoin Sent - 25k sats",[90m
[31m+   "[90m
[31m+     <!DOCTYPE html>[90m
[31m+     <html>[90m
[31m+     <head>[90m
[31m+       <meta charset=\"utf-8\">[90m
[31m+       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">[90m
[31m+       <style>[90m
[31m+         body {[90m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[90m
[31m+           line-height: 1.6;[90m
[31m+           color: #333;[90m
[31m+           max-width: 600px;[90m
[31m+           margin: 0 auto;[90m
[31m+           padding: 20px;[90m
[31m+           background-color: #f5f5f5;[90m
[31m+         }[90m
[31m+         .container {[90m
[31m+           background-color: #ffffff;[90m
[31m+           border-radius: 8px;[90m
[31m+           overflow: hidden;[90m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[90m
[31m+         }[90m
[31m+         .header {[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           padding: 30px 20px;[90m
[31m+           text-align: center;[90m
[31m+         }[90m
[31m+         .header h1 {[90m
[31m+           color: #ffffff;[90m
[31m+           margin: 0;[90m
[31m+           font-size: 24px;[90m
[31m+           font-weight: 600;[90m
[31m+         }[90m
[31m+         .content {[90m
[31m+           padding: 30px 20px;[90m
[31m+         }[90m
[31m+         .greeting {[90m
[31m+           font-size: 16px;[90m
[31m+           margin-bottom: 20px;[90m
[31m+         }[90m
[31m+         .details {[90m
[31m+           background-color: #f9fafb;[90m
[31m+           border-radius: 6px;[90m
[31m+           padding: 20px;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         .detail-row {[90m
[31m+           display: flex;[90m
[31m+           justify-content: space-between;[90m
[31m+           padding: 8px 0;[90m
[31m+           border-bottom: 1px solid #e5e7eb;[90m
[31m+           gap: 16px;[90m
[31m+         }[90m
[31m+         .detail-row:last-child {[90m
[31m+           border-bottom: none;[90m
[31m+         }[90m
[31m+         .detail-label {[90m
[31m+           font-weight: 600;[90m
[31m+           color: #6b7280;[90m
[31m+           flex-shrink: 0;[90m
[31m+         }[90m
[31m+         .detail-value {[90m
[31m+           color: #111827;[90m
[31m+           text-align: right;[90m
[31m+         }[90m
[31m+         .cta-button {[90m
[31m+           display: inline-block;[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           color: #ffffff !important;[90m
[31m+           text-decoration: none;[90m
[31m+           padding: 12px 30px;[90m
[31m+           border-radius: 6px;[90m
[31m+           font-weight: 600;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         a.cta-button {[90m
[31m+           color: #ffffff !important;[90m
[31m+         }[90m
[31m+         .footer {[90m
[31m+           text-align: center;[90m
[31m+           padding: 20px;[90m
[31m+           color: #6b7280;[90m
[31m+           font-size: 14px;[90m
[31m+         }[90m
[31m+         .footer a {[90m
[31m+           color: #16a349;[90m
[31m+           text-decoration: none;[90m
[31m+         }[90m
[31m+       </style>[90m
[31m+     </head>[90m
[31m+     <body>[90m
[31m+       <div class=\"container\">[90m
[31m+         <div class=\"header\">[90m
[31m+           <h1>Bitcoin Sent</h1>[90m
[31m+         </div>[90m
[31m+         <div class=\"content\">[90m
[31m+           <div class=\"greeting\">[90m
[31m+             Hello Alice,[90m
[31m+           </div>[90m
[31m+           <p>[90m
[31m+             You sent Bitcoin via Lightning.[90m
[31m+           </p>[90m
[31m+           <div class=\"details\">[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Amount:</span>[90m
[31m+               <span class=\"detail-value\">25k sats (USD price unavailable)</span>[90m
[31m+             </div>[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Date:</span>[90m
[31m+               <span class=\"detail-value\">Jan 20, 2024, 2:45 PM UTC</span>[90m
[31m+             </div>[90m
[31m+             [90m
[31m+           </div>[90m
[31m+           <center>[90m
[31m+             <a href=\"https://www.ganamos.earth/wallet\" class=\"cta-button\">View Wallet</a>[90m
[31m+           </center>[90m
[31m+         </div>[90m
[31m+         <div class=\"footer\">[90m
[31m+           <p>[90m
[31m+             This is an automated notification from <a href=\"https://www.ganamos.earth\">Ganamos</a>.[90m
[31m+           </p>[90m
[31m+         </div>[90m
[31m+       </div>[90m
[31m+     </body>[90m
[31m+     </html>[90m
[31m+   ",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should show "via Lightning" for withdrawal transactions 1ms
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should show receiver name for internal transactions 1ms
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should include receiver detail row for internal transfers 1ms
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should not include receiver detail row for withdrawals 1ms
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should use first name only in greeting 1ms
   ✓ lib/transaction-emails > sendBitcoinSentEmail > should include wallet link 1ms
   ✓ lib/transaction-emails > sendIssueFixedEmail > should send email with correct recipient and subject 1ms
   ✓ lib/transaction-emails > sendIssueFixedEmail > should include issue title in email content 6ms
   ✓ lib/transaction-emails > sendIssueFixedEmail > should include fixer name in content 1ms
   × lib/transaction-emails > sendIssueFixedEmail > should include formatted reward amount 3ms
     → expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain '5,000 sats'
   ✓ lib/transaction-emails > sendIssueFixedEmail > should include post link with correct post ID 1ms
   ✓ lib/transaction-emails > sendIssueFixedEmail > should use first name only in greeting 1ms
   ✓ lib/transaction-emails > sendIssueFixedEmail > should include formatted date 1ms
   × lib/transaction-emails > email HTML structure > should include gradient header styling 6ms
     → expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain 'background: linear-gradient(135deg, #…'
   × lib/transaction-emails > email HTML structure > should include CTA button with proper styling 5ms
     → expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain 'background: linear-gradient(135deg, #…'
   ✓ lib/transaction-emails > email HTML structure > should include responsive styling 1ms
stderr | tests/integration/api/user/balance.test.ts > /api/user/balance GET endpoint > Error Handling > should return 500 when database query fails
Error fetching balance: Error: Database connection failed
    at [90m/workspaces/ganamos/[39mtests/integration/api/user/balance.test.ts:119:23
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/api/user/balance.test.ts > /api/user/balance GET endpoint > Error Handling > should return 500 when profile is not found
Error fetching balance: Error: Profile not found
    at [90m/workspaces/ganamos/[39mtests/integration/api/user/balance.test.ts:138:29
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/integration/api/user/balance.test.ts > /api/user/balance GET endpoint > Response Format > should return consistent error structure on failure
Error fetching balance: Error: Test error
    at [90m/workspaces/ganamos/[39mtests/integration/api/user/balance.test.ts:274:23
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:155:11
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:26
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:1729:8[90m)[39m

 ✓ tests/integration/api/user/balance.test.ts (16 tests) 24ms
stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should send email successfully with valid parameters
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Test Subject
[EMAIL DEBUG] HTML length: [33m24[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mtrue[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: re_BifpTxn
[EMAIL DEBUG] About to call resend.emails.send

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should send email successfully with valid parameters
[EMAIL DEBUG] Resend response - data: { id: [32m'test-message-id-123'[39m }
[EMAIL DEBUG] Resend response - error: [1mnull[22m
[EMAIL DEBUG] Email sent successfully: test-message-id-123

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should send email with correct sender address
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: recipient@test.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mtrue[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: re_BifpTxn
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should send email with correct sender address
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:61:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:61:7
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should wrap recipient email in array
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mtrue[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: re_BifpTxn
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should wrap recipient email in array
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:76:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:76:7
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should return error when Resend API returns error
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mtrue[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: re_BifpTxn
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should return error when Resend API returns error
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:94:22
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:94:22
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should handle exceptions during email sending
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mtrue[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: re_BifpTxn
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should handle exceptions during email sending
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:110:22
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:110:22
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should handle non-Error exceptions
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mtrue[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: re_BifpTxn
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should handle non-Error exceptions
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:125:22
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:125:22
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should throw error when RESEND_API_KEY is not configured
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mfalse[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: [90mundefined[39m
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should throw error when RESEND_API_KEY is not configured
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > email content validation > should send email with HTML content
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Subject
[EMAIL DEBUG] HTML length: [33m53[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mfalse[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: [90mundefined[39m
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > email content validation > should send email with HTML content
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:171:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:171:7
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/lib/email.test.ts > lib/email - sendEmail > email content validation > should preserve special characters in subject line
[EMAIL DEBUG] Starting sendEmail function
[EMAIL DEBUG] To: test@example.com
[EMAIL DEBUG] Subject: Bitcoin Sent - 1,000 sats ($0.50)
[EMAIL DEBUG] HTML length: [33m14[39m
[EMAIL DEBUG] RESEND_API_KEY exists: [33mfalse[39m
[EMAIL DEBUG] RESEND_API_KEY first 10 chars: [90mundefined[39m
[EMAIL DEBUG] About to call resend.emails.send

stderr | tests/unit/lib/email.test.ts > lib/email - sendEmail > email content validation > should preserve special characters in subject line
[EMAIL DEBUG] Exception caught: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail [90m(/workspaces/ganamos/[39mlib/email.ts:27:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/workspaces/ganamos/[39mtests/unit/lib/email.test.ts:187:7
    at [90mfile:///workspaces/ganamos/[39mnode_modules/[4m@vitest/runner[24m/dist/chunk-hooks.js:752:20
[EMAIL DEBUG] Exception type: object
[EMAIL DEBUG] Exception stack: TypeError: Cannot destructure property 'data' of '(intermediate value)' as it is undefined.
    at Module.sendEmail (/workspaces/ganamos/lib/email.ts:27:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at /workspaces/ganamos/tests/unit/lib/email.test.ts:187:7
    at file:///workspaces/ganamos/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20

 ❯ tests/unit/lib/email.test.ts (9 tests | 8 failed) 27ms
   ✓ lib/email - sendEmail > successful email sending > should send email successfully with valid parameters 5ms
   × lib/email - sendEmail > successful email sending > should send email with correct sender address 8ms
     → expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × lib/email - sendEmail > successful email sending > should wrap recipient email in array 2ms
     → expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × lib/email - sendEmail > error handling > should return error when Resend API returns error 4ms
     → expected { success: false, …(1) } to deeply equal { success: false, …(1) }
   × lib/email - sendEmail > error handling > should handle exceptions during email sending 2ms
     → expected { success: false, …(1) } to deeply equal { success: false, …(1) }
   × lib/email - sendEmail > error handling > should handle non-Error exceptions 1ms
     → expected { success: false, …(1) } to deeply equal { success: false, …(1) }
   × lib/email - sendEmail > error handling > should throw error when RESEND_API_KEY is not configured 2ms
     → promise resolved "{ success: false, …(1) }" instead of rejecting
   × lib/email - sendEmail > email content validation > should send email with HTML content 1ms
     → expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
   × lib/email - sendEmail > email content validation > should preserve special characters in subject line 1ms
     → expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ✓ tests/unit/utils.test.ts (4 tests) 3ms

⎯⎯⎯⎯⎯⎯ Failed Tests 21 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should send email with correct sender address
AssertionError: expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/lib/email.test.ts:63:30
     61|       await sendEmail('recipient@test.com', 'Subject', '<p>Content</p>…
     62| 
     63|       expect(mockResendSend).toHaveBeenCalledWith(
       |                              ^
     64|         expect.objectContaining({
     65|           from: 'Ganamos <noreply@ganamos.earth>'

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > successful email sending > should wrap recipient email in array
AssertionError: expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/lib/email.test.ts:78:30
     76|       await sendEmail('test@example.com', 'Subject', '<p>Content</p>')
     77| 
     78|       expect(mockResendSend).toHaveBeenCalledWith(
       |                              ^
     79|         expect.objectContaining({
     80|           to: ['test@example.com']

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should return error when Resend API returns error
AssertionError: expected { success: false, …(1) } to deeply equal { success: false, …(1) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[32m-   "error": "Invalid API key",[39m
[31m+   "error": "Cannot destructure property 'data' of '(intermediate value)' as it is undefined.",[39m
[2m    "success": false,[22m
[2m  }[22m

 ❯ tests/unit/lib/email.test.ts:100:22
     98|       )
     99| 
    100|       expect(result).toEqual({
       |                      ^
    101|         success: false,
    102|         error: errorMessage

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should handle exceptions during email sending
AssertionError: expected { success: false, …(1) } to deeply equal { success: false, …(1) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[32m-   "error": "Network error",[39m
[31m+   "error": "Cannot destructure property 'data' of '(intermediate value)' as it is undefined.",[39m
[2m    "success": false,[22m
[2m  }[22m

 ❯ tests/unit/lib/email.test.ts:116:22
    114|       )
    115| 
    116|       expect(result).toEqual({
       |                      ^
    117|         success: false,
    118|         error: errorMessage

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should handle non-Error exceptions
AssertionError: expected { success: false, …(1) } to deeply equal { success: false, …(1) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[32m-   "error": "String error",[39m
[31m+   "error": "Cannot destructure property 'data' of '(intermediate value)' as it is undefined.",[39m
[2m    "success": false,[22m
[2m  }[22m

 ❯ tests/unit/lib/email.test.ts:131:22
    129|       )
    130| 
    131|       expect(result).toEqual({
       |                      ^
    132|         success: false,
    133|         error: 'String error'

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > error handling > should throw error when RESEND_API_KEY is not configured
AssertionError: promise resolved "{ success: false, …(1) }" instead of rejecting

[32m- Expected[39m
[31m+ Received[39m

[32m- Error {[39m
[32m-   "message": "rejected promise",[39m
[31m+ {[39m
[31m+   "error": "Cannot destructure property 'data' of '(intermediate value)' as it is undefined.",[39m
[31m+   "success": false,[39m
[2m  }[22m

 ❯ tests/unit/lib/email.test.ts:154:7
    152|       await expect(
    153|         sendEmail('test@example.com', 'Subject', '<p>Content</p>')
    154|       ).rejects.toThrow('RESEND_API_KEY not configured')
       |       ^
    155| 
    156|       // Restore original value

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > email content validation > should send email with HTML content
AssertionError: expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/lib/email.test.ts:173:30
    171|       await sendEmail('test@example.com', 'Subject', htmlContent)
    172| 
    173|       expect(mockResendSend).toHaveBeenCalledWith(
       |                              ^
    174|         expect.objectContaining({
    175|           html: htmlContent

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/21]⎯

 FAIL  tests/unit/lib/email.test.ts > lib/email - sendEmail > email content validation > should preserve special characters in subject line
AssertionError: expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ tests/unit/lib/email.test.ts:189:30
    187|       await sendEmail('test@example.com', subject, '<p>Content</p>')
    188| 
    189|       expect(mockResendSend).toHaveBeenCalledWith(
       |                              ^
    190|         expect.objectContaining({
    191|           subject: subject

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include formatted amount in subject line
AssertionError: expected "sendEmail" to be called with arguments: [ Any<String>, …(2) ][90m

Received: 

[1m  1st sendEmail call:

[22m[2m  [[22m
[32m-   Any<String>,[90m
[32m-   StringContaining "10,000 sats",[90m
[32m-   Any<String>,[90m
[31m+   "recipient@example.com",[90m
[31m+   "Bitcoin Received - 10k sats",[90m
[31m+   "[90m
[31m+     <!DOCTYPE html>[90m
[31m+     <html>[90m
[31m+     <head>[90m
[31m+       <meta charset=\"utf-8\">[90m
[31m+       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">[90m
[31m+       <style>[90m
[31m+         body {[90m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[90m
[31m+           line-height: 1.6;[90m
[31m+           color: #333;[90m
[31m+           max-width: 600px;[90m
[31m+           margin: 0 auto;[90m
[31m+           padding: 20px;[90m
[31m+           background-color: #f5f5f5;[90m
[31m+         }[90m
[31m+         .container {[90m
[31m+           background-color: #ffffff;[90m
[31m+           border-radius: 8px;[90m
[31m+           overflow: hidden;[90m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[90m
[31m+         }[90m
[31m+         .header {[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           padding: 30px 20px;[90m
[31m+           text-align: center;[90m
[31m+         }[90m
[31m+         .header h1 {[90m
[31m+           color: #ffffff;[90m
[31m+           margin: 0;[90m
[31m+           font-size: 24px;[90m
[31m+           font-weight: 600;[90m
[31m+         }[90m
[31m+         .content {[90m
[31m+           padding: 30px 20px;[90m
[31m+         }[90m
[31m+         .greeting {[90m
[31m+           font-size: 16px;[90m
[31m+           margin-bottom: 20px;[90m
[31m+         }[90m
[31m+         .details {[90m
[31m+           background-color: #f9fafb;[90m
[31m+           border-radius: 6px;[90m
[31m+           padding: 20px;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         .detail-row {[90m
[31m+           display: flex;[90m
[31m+           justify-content: space-between;[90m
[31m+           padding: 8px 0;[90m
[31m+           border-bottom: 1px solid #e5e7eb;[90m
[31m+           gap: 16px;[90m
[31m+         }[90m
[31m+         .detail-row:last-child {[90m
[31m+           border-bottom: none;[90m
[31m+         }[90m
[31m+         .detail-label {[90m
[31m+           font-weight: 600;[90m
[31m+           color: #6b7280;[90m
[31m+           flex-shrink: 0;[90m
[31m+         }[90m
[31m+         .detail-value {[90m
[31m+           color: #111827;[90m
[31m+           text-align: right;[90m
[31m+         }[90m
[31m+         .cta-button {[90m
[31m+           display: inline-block;[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           color: #ffffff !important;[90m
[31m+           text-decoration: none;[90m
[31m+           padding: 12px 30px;[90m
[31m+           border-radius: 6px;[90m
[31m+           font-weight: 600;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         a.cta-button {[90m
[31m+           color: #ffffff !important;[90m
[31m+         }[90m
[31m+         .footer {[90m
[31m+           text-align: center;[90m
[31m+           padding: 20px;[90m
[31m+           color: #6b7280;[90m
[31m+           font-size: 14px;[90m
[31m+         }[90m
[31m+         .footer a {[90m
[31m+           color: #16a349;[90m
[31m+           text-decoration: none;[90m
[31m+         }[90m
[31m+       </style>[90m
[31m+     </head>[90m
[31m+     <body>[90m
[31m+       <div class=\"container\">[90m
[31m+         <div class=\"header\">[90m
[31m+           <h1>Bitcoin Received</h1>[90m
[31m+         </div>[90m
[31m+         <div class=\"content\">[90m
[31m+           <div class=\"greeting\">[90m
[31m+             Hello John,[90m
[31m+           </div>[90m
[31m+           <p>[90m
[31m+             You received Bitcoin via Lightning.[90m
[31m+           </p>[90m
[31m+           <div class=\"details\">[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Amount:</span>[90m
[31m+               <span class=\"detail-value\">10k sats (USD price unavailable)</span>[90m
[31m+             </div>[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Date:</span>[90m
[31m+               <span class=\"detail-value\">Jan 15, 2024, 10:30 AM UTC</span>[90m
[31m+             </div>[90m
[31m+             [90m
[31m+           </div>[90m
[31m+           <center>[90m
[31m+             <a href=\"https://www.ganamos.earth/wallet\" class=\"cta-button\">View Wallet</a>[90m
[31m+           </center>[90m
[31m+         </div>[90m
[31m+         <div class=\"footer\">[90m
[31m+           <p>[90m
[31m+             This is an automated notification from <a href=\"https://www.ganamos.earth\">Ganamos</a>.[90m
[31m+           </p>[90m
[31m+         </div>[90m
[31m+       </div>[90m
[31m+     </body>[90m
[31m+     </html>[90m
[31m+   ",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/lib/transaction-emails.test.ts:39:25
     37|       await sendBitcoinReceivedEmail(baseParams)
     38| 
     39|       expect(sendEmail).toHaveBeenCalledWith(
       |                         ^
     40|         expect.any(String),
     41|         expect.stringContaining('10,000 sats'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should include BTC and sats amount in content
AssertionError: expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain '0.00050000 BTC'

[32m- Expected[39m
[31m+ Received[39m

[32m- 0.00050000 BTC[39m
[31m+[39m
[31m+     <!DOCTYPE html>[39m
[31m+     <html>[39m
[31m+     <head>[39m
[31m+       <meta charset="utf-8">[39m
[31m+       <meta name="viewport" content="width=device-width, initial-scale=1.0">[39m
[31m+       <style>[39m
[31m+         body {[39m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[39m
[31m+           line-height: 1.6;[39m
[31m+           color: #333;[39m
[31m+           max-width: 600px;[39m
[31m+           margin: 0 auto;[39m
[31m+           padding: 20px;[39m
[31m+           background-color: #f5f5f5;[39m
[31m+         }[39m
[31m+         .container {[39m
[31m+           background-color: #ffffff;[39m
[31m+           border-radius: 8px;[39m
[31m+           overflow: hidden;[39m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[39m
[31m+         }[39m
[31m+         .header {[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           padding: 30px 20px;[39m
[31m+           text-align: center;[39m
[31m+         }[39m
[31m+         .header h1 {[39m
[31m+           color: #ffffff;[39m
[31m+           margin: 0;[39m
[31m+           font-size: 24px;[39m
[31m+           font-weight: 600;[39m
[31m+         }[39m
[31m+         .content {[39m
[31m+           padding: 30px 20px;[39m
[31m+         }[39m
[31m+         .greeting {[39m
[31m+           font-size: 16px;[39m
[31m+           margin-bottom: 20px;[39m
[31m+         }[39m
[31m+         .details {[39m
[31m+           background-color: #f9fafb;[39m
[31m+           border-radius: 6px;[39m
[31m+           padding: 20px;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         .detail-row {[39m
[31m+           display: flex;[39m
[31m+           justify-content: space-between;[39m
[31m+           padding: 8px 0;[39m
[31m+           border-bottom: 1px solid #e5e7eb;[39m
[31m+           gap: 16px;[39m
[31m+         }[39m
[31m+         .detail-row:last-child {[39m
[31m+           border-bottom: none;[39m
[31m+         }[39m
[31m+         .detail-label {[39m
[31m+           font-weight: 600;[39m
[31m+           color: #6b7280;[39m
[31m+           flex-shrink: 0;[39m
[31m+         }[39m
[31m+         .detail-value {[39m
[31m+           color: #111827;[39m
[31m+           text-align: right;[39m
[31m+         }[39m
[31m+         .cta-button {[39m
[31m+           display: inline-block;[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           color: #ffffff !important;[39m
[31m+           text-decoration: none;[39m
[31m+           padding: 12px 30px;[39m
[31m+           border-radius: 6px;[39m
[31m+           font-weight: 600;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         a.cta-button {[39m
[31m+           color: #ffffff !important;[39m
[31m+         }[39m
[31m+         .footer {[39m
[31m+           text-align: center;[39m
[31m+           padding: 20px;[39m
[31m+           color: #6b7280;[39m
[31m+           font-size: 14px;[39m
[31m+         }[39m
[31m+         .footer a {[39m
[31m+           color: #16a349;[39m
[31m+           text-decoration: none;[39m
[31m+         }[39m
[31m+       </style>[39m
[31m+     </head>[39m
[31m+     <body>[39m
[31m+       <div class="container">[39m
[31m+         <div class="header">[39m
[31m+           <h1>Bitcoin Received</h1>[39m
[31m+         </div>[39m
[31m+         <div class="content">[39m
[31m+           <div class="greeting">[39m
[31m+             Hello John,[39m
[31m+           </div>[39m
[31m+           <p>[39m
[31m+             You received Bitcoin via Lightning.[39m
[31m+           </p>[39m
[31m+           <div class="details">[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Amount:</span>[39m
[31m+               <span class="detail-value">50k sats (USD price unavailable)</span>[39m
[31m+             </div>[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Date:</span>[39m
[31m+               <span class="detail-value">Jan 15, 2024, 10:30 AM UTC</span>[39m
[31m+             </div>[39m
[31m+             [39m
[31m+           </div>[39m
[31m+           <center>[39m
[31m+             <a href="https://www.ganamos.earth/wallet" class="cta-button">View Wallet</a>[39m
[31m+           </center>[39m
[31m+         </div>[39m
[31m+         <div class="footer">[39m
[31m+           <p>[39m
[31m+             This is an automated notification from <a href="https://www.ganamos.earth">Ganamos</a>.[39m
[31m+           </p>[39m
[31m+         </div>[39m
[31m+       </div>[39m
[31m+     </body>[39m
[31m+     </html>[39m
[31m+   [39m

 ❯ tests/unit/lib/transaction-emails.test.ts:86:27
     84| 
     85|       const htmlContent = (sendEmail as ReturnType<typeof vi.fn>).mock…
     86|       expect(htmlContent).toContain('0.00050000 BTC')
       |                           ^
     87|       expect(htmlContent).toContain('50,000 sats')
     88|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinReceivedEmail > should handle large amounts correctly
AssertionError: expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain '1.00000000 BTC'

[32m- Expected[39m
[31m+ Received[39m

[32m- 1.00000000 BTC[39m
[31m+[39m
[31m+     <!DOCTYPE html>[39m
[31m+     <html>[39m
[31m+     <head>[39m
[31m+       <meta charset="utf-8">[39m
[31m+       <meta name="viewport" content="width=device-width, initial-scale=1.0">[39m
[31m+       <style>[39m
[31m+         body {[39m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[39m
[31m+           line-height: 1.6;[39m
[31m+           color: #333;[39m
[31m+           max-width: 600px;[39m
[31m+           margin: 0 auto;[39m
[31m+           padding: 20px;[39m
[31m+           background-color: #f5f5f5;[39m
[31m+         }[39m
[31m+         .container {[39m
[31m+           background-color: #ffffff;[39m
[31m+           border-radius: 8px;[39m
[31m+           overflow: hidden;[39m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[39m
[31m+         }[39m
[31m+         .header {[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           padding: 30px 20px;[39m
[31m+           text-align: center;[39m
[31m+         }[39m
[31m+         .header h1 {[39m
[31m+           color: #ffffff;[39m
[31m+           margin: 0;[39m
[31m+           font-size: 24px;[39m
[31m+           font-weight: 600;[39m
[31m+         }[39m
[31m+         .content {[39m
[31m+           padding: 30px 20px;[39m
[31m+         }[39m
[31m+         .greeting {[39m
[31m+           font-size: 16px;[39m
[31m+           margin-bottom: 20px;[39m
[31m+         }[39m
[31m+         .details {[39m
[31m+           background-color: #f9fafb;[39m
[31m+           border-radius: 6px;[39m
[31m+           padding: 20px;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         .detail-row {[39m
[31m+           display: flex;[39m
[31m+           justify-content: space-between;[39m
[31m+           padding: 8px 0;[39m
[31m+           border-bottom: 1px solid #e5e7eb;[39m
[31m+           gap: 16px;[39m
[31m+         }[39m
[31m+         .detail-row:last-child {[39m
[31m+           border-bottom: none;[39m
[31m+         }[39m
[31m+         .detail-label {[39m
[31m+           font-weight: 600;[39m
[31m+           color: #6b7280;[39m
[31m+           flex-shrink: 0;[39m
[31m+         }[39m
[31m+         .detail-value {[39m
[31m+           color: #111827;[39m
[31m+           text-align: right;[39m
[31m+         }[39m
[31m+         .cta-button {[39m
[31m+           display: inline-block;[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           color: #ffffff !important;[39m
[31m+           text-decoration: none;[39m
[31m+           padding: 12px 30px;[39m
[31m+           border-radius: 6px;[39m
[31m+           font-weight: 600;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         a.cta-button {[39m
[31m+           color: #ffffff !important;[39m
[31m+         }[39m
[31m+         .footer {[39m
[31m+           text-align: center;[39m
[31m+           padding: 20px;[39m
[31m+           color: #6b7280;[39m
[31m+           font-size: 14px;[39m
[31m+         }[39m
[31m+         .footer a {[39m
[31m+           color: #16a349;[39m
[31m+           text-decoration: none;[39m
[31m+         }[39m
[31m+       </style>[39m
[31m+     </head>[39m
[31m+     <body>[39m
[31m+       <div class="container">[39m
[31m+         <div class="header">[39m
[31m+           <h1>Bitcoin Received</h1>[39m
[31m+         </div>[39m
[31m+         <div class="content">[39m
[31m+           <div class="greeting">[39m
[31m+             Hello John,[39m
[31m+           </div>[39m
[31m+           <p>[39m
[31m+             You received Bitcoin via Lightning.[39m
[31m+           </p>[39m
[31m+           <div class="details">[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Amount:</span>[39m
[31m+               <span class="detail-value">100M sats (USD price unavailable)</span>[39m
[31m+             </div>[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Date:</span>[39m
[31m+               <span class="detail-value">Jan 15, 2024, 10:30 AM UTC</span>[39m
[31m+             </div>[39m
[31m+             [39m
[31m+           </div>[39m
[31m+           <center>[39m
[31m+             <a href="https://www.ganamos.earth/wallet" class="cta-button">View Wallet</a>[39m
[31m+           </center>[39m
[31m+         </div>[39m
[31m+         <div class="footer">[39m
[31m+           <p>[39m
[31m+             This is an automated notification from <a href="https://www.ganamos.earth">Ganamos</a>.[39m
[31m+           </p>[39m
[31m+         </div>[39m
[31m+       </div>[39m
[31m+     </body>[39m
[31m+     </html>[39m
[31m+   [39m

 ❯ tests/unit/lib/transaction-emails.test.ts:136:27
    134| 
    135|       const htmlContent = (sendEmail as ReturnType<typeof vi.fn>).mock…
    136|       expect(htmlContent).toContain('1.00000000 BTC')
       |                           ^
    137|     })
    138|   })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendBitcoinSentEmail > should include formatted amount in subject line
AssertionError: expected "sendEmail" to be called with arguments: [ Any<String>, …(2) ][90m

Received: 

[1m  1st sendEmail call:

[22m[2m  [[22m
[32m-   Any<String>,[90m
[32m-   StringContaining "25,000 sats",[90m
[32m-   Any<String>,[90m
[31m+   "sender@example.com",[90m
[31m+   "Bitcoin Sent - 25k sats",[90m
[31m+   "[90m
[31m+     <!DOCTYPE html>[90m
[31m+     <html>[90m
[31m+     <head>[90m
[31m+       <meta charset=\"utf-8\">[90m
[31m+       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">[90m
[31m+       <style>[90m
[31m+         body {[90m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[90m
[31m+           line-height: 1.6;[90m
[31m+           color: #333;[90m
[31m+           max-width: 600px;[90m
[31m+           margin: 0 auto;[90m
[31m+           padding: 20px;[90m
[31m+           background-color: #f5f5f5;[90m
[31m+         }[90m
[31m+         .container {[90m
[31m+           background-color: #ffffff;[90m
[31m+           border-radius: 8px;[90m
[31m+           overflow: hidden;[90m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[90m
[31m+         }[90m
[31m+         .header {[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           padding: 30px 20px;[90m
[31m+           text-align: center;[90m
[31m+         }[90m
[31m+         .header h1 {[90m
[31m+           color: #ffffff;[90m
[31m+           margin: 0;[90m
[31m+           font-size: 24px;[90m
[31m+           font-weight: 600;[90m
[31m+         }[90m
[31m+         .content {[90m
[31m+           padding: 30px 20px;[90m
[31m+         }[90m
[31m+         .greeting {[90m
[31m+           font-size: 16px;[90m
[31m+           margin-bottom: 20px;[90m
[31m+         }[90m
[31m+         .details {[90m
[31m+           background-color: #f9fafb;[90m
[31m+           border-radius: 6px;[90m
[31m+           padding: 20px;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         .detail-row {[90m
[31m+           display: flex;[90m
[31m+           justify-content: space-between;[90m
[31m+           padding: 8px 0;[90m
[31m+           border-bottom: 1px solid #e5e7eb;[90m
[31m+           gap: 16px;[90m
[31m+         }[90m
[31m+         .detail-row:last-child {[90m
[31m+           border-bottom: none;[90m
[31m+         }[90m
[31m+         .detail-label {[90m
[31m+           font-weight: 600;[90m
[31m+           color: #6b7280;[90m
[31m+           flex-shrink: 0;[90m
[31m+         }[90m
[31m+         .detail-value {[90m
[31m+           color: #111827;[90m
[31m+           text-align: right;[90m
[31m+         }[90m
[31m+         .cta-button {[90m
[31m+           display: inline-block;[90m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[90m
[31m+           color: #ffffff !important;[90m
[31m+           text-decoration: none;[90m
[31m+           padding: 12px 30px;[90m
[31m+           border-radius: 6px;[90m
[31m+           font-weight: 600;[90m
[31m+           margin: 20px 0;[90m
[31m+         }[90m
[31m+         a.cta-button {[90m
[31m+           color: #ffffff !important;[90m
[31m+         }[90m
[31m+         .footer {[90m
[31m+           text-align: center;[90m
[31m+           padding: 20px;[90m
[31m+           color: #6b7280;[90m
[31m+           font-size: 14px;[90m
[31m+         }[90m
[31m+         .footer a {[90m
[31m+           color: #16a349;[90m
[31m+           text-decoration: none;[90m
[31m+         }[90m
[31m+       </style>[90m
[31m+     </head>[90m
[31m+     <body>[90m
[31m+       <div class=\"container\">[90m
[31m+         <div class=\"header\">[90m
[31m+           <h1>Bitcoin Sent</h1>[90m
[31m+         </div>[90m
[31m+         <div class=\"content\">[90m
[31m+           <div class=\"greeting\">[90m
[31m+             Hello Alice,[90m
[31m+           </div>[90m
[31m+           <p>[90m
[31m+             You sent Bitcoin via Lightning.[90m
[31m+           </p>[90m
[31m+           <div class=\"details\">[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Amount:</span>[90m
[31m+               <span class=\"detail-value\">25k sats (USD price unavailable)</span>[90m
[31m+             </div>[90m
[31m+             <div class=\"detail-row\">[90m
[31m+               <span class=\"detail-label\">Date:</span>[90m
[31m+               <span class=\"detail-value\">Jan 20, 2024, 2:45 PM UTC</span>[90m
[31m+             </div>[90m
[31m+             [90m
[31m+           </div>[90m
[31m+           <center>[90m
[31m+             <a href=\"https://www.ganamos.earth/wallet\" class=\"cta-button\">View Wallet</a>[90m
[31m+           </center>[90m
[31m+         </div>[90m
[31m+         <div class=\"footer\">[90m
[31m+           <p>[90m
[31m+             This is an automated notification from <a href=\"https://www.ganamos.earth\">Ganamos</a>.[90m
[31m+           </p>[90m
[31m+         </div>[90m
[31m+       </div>[90m
[31m+     </body>[90m
[31m+     </html>[90m
[31m+   ",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/unit/lib/transaction-emails.test.ts:162:25
    160|       await sendBitcoinSentEmail(baseParams)
    161| 
    162|       expect(sendEmail).toHaveBeenCalledWith(
       |                         ^
    163|         expect.any(String),
    164|         expect.stringContaining('25,000 sats'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > sendIssueFixedEmail > should include formatted reward amount
AssertionError: expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain '5,000 sats'

[32m- Expected[39m
[31m+ Received[39m

[32m- 5,000 sats[39m
[31m+[39m
[31m+     <!DOCTYPE html>[39m
[31m+     <html>[39m
[31m+     <head>[39m
[31m+       <meta charset="utf-8">[39m
[31m+       <meta name="viewport" content="width=device-width, initial-scale=1.0">[39m
[31m+       <style>[39m
[31m+         body {[39m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[39m
[31m+           line-height: 1.6;[39m
[31m+           color: #333;[39m
[31m+           max-width: 600px;[39m
[31m+           margin: 0 auto;[39m
[31m+           padding: 20px;[39m
[31m+           background-color: #f5f5f5;[39m
[31m+         }[39m
[31m+         .container {[39m
[31m+           background-color: #ffffff;[39m
[31m+           border-radius: 8px;[39m
[31m+           overflow: hidden;[39m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[39m
[31m+         }[39m
[31m+         .header {[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           padding: 30px 20px;[39m
[31m+           text-align: center;[39m
[31m+         }[39m
[31m+         .header h1 {[39m
[31m+           color: #ffffff;[39m
[31m+           margin: 0;[39m
[31m+           font-size: 24px;[39m
[31m+           font-weight: 600;[39m
[31m+         }[39m
[31m+         .content {[39m
[31m+           padding: 30px 20px;[39m
[31m+         }[39m
[31m+         .greeting {[39m
[31m+           font-size: 16px;[39m
[31m+           margin-bottom: 20px;[39m
[31m+         }[39m
[31m+         p {[39m
[31m+           font-size: 16px;[39m
[31m+           margin-bottom: 20px;[39m
[31m+         }[39m
[31m+         .issue-title {[39m
[31m+           background-color: #f9fafb;[39m
[31m+           border-left: 4px solid #16a349;[39m
[31m+           padding: 15px;[39m
[31m+           margin: 20px 0;[39m
[31m+           font-weight: 600;[39m
[31m+           font-size: 16px;[39m
[31m+         }[39m
[31m+         .details {[39m
[31m+           background-color: #f9fafb;[39m
[31m+           border-radius: 6px;[39m
[31m+           padding: 20px;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         .detail-row {[39m
[31m+           display: flex;[39m
[31m+           justify-content: space-between;[39m
[31m+           padding: 8px 0;[39m
[31m+           border-bottom: 1px solid #e5e7eb;[39m
[31m+           gap: 16px;[39m
[31m+         }[39m
[31m+         .detail-row:last-child {[39m
[31m+           border-bottom: none;[39m
[31m+         }[39m
[31m+         .detail-label {[39m
[31m+           font-weight: 600;[39m
[31m+           color: #6b7280;[39m
[31m+           flex-shrink: 0;[39m
[31m+         }[39m
[31m+         .detail-value {[39m
[31m+           color: #111827;[39m
[31m+           text-align: right;[39m
[31m+         }[39m
[31m+         .cta-button {[39m
[31m+           display: inline-block;[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           color: #ffffff !important;[39m
[31m+           text-decoration: none;[39m
[31m+           padding: 12px 30px;[39m
[31m+           border-radius: 6px;[39m
[31m+           font-weight: 600;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         a.cta-button {[39m
[31m+           color: #ffffff !important;[39m
[31m+         }[39m
[31m+         .footer {[39m
[31m+           text-align: center;[39m
[31m+           padding: 20px;[39m
[31m+           color: #6b7280;[39m
[31m+           font-size: 14px;[39m
[31m+         }[39m
[31m+         .footer a {[39m
[31m+           color: #16a349;[39m
[31m+           text-decoration: none;[39m
[31m+         }[39m
[31m+       </style>[39m
[31m+     </head>[39m
[31m+     <body>[39m
[31m+       <div class="container">[39m
[31m+         <div class="header">[39m
[31m+           <h1>Issue Fixed!</h1>[39m
[31m+         </div>[39m
[31m+         <div class="content">[39m
[31m+           <div class="greeting">[39m
[31m+             Hello Post,[39m
[31m+           </div>[39m
[31m+           <p>[39m
[31m+             Great news! John Fixer submitted a fix for your issue.[39m
[31m+           </p>[39m
[31m+           <div class="issue-title">[39m
[31m+             "Fix broken streetlight on Main St"[39m
[31m+           </div>[39m
[31m+           <div class="details">[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Fixed By:</span>[39m
[31m+               <span class="detail-value">John Fixer</span>[39m
[31m+             </div>[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Reward Paid:</span>[39m
[31m+               <span class="detail-value">5k sats (USD price unavailable)</span>[39m
[31m+             </div>[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Date:</span>[39m
[31m+               <span class="detail-value">Jan 25, 2024, 4:00 PM UTC</span>[39m
[31m+             </div>[39m
[31m+           </div>[39m
[31m+           <center>[39m
[31m+             <a href="https://www.ganamos.earth/post/post-123-abc" class="cta-button">View Issue</a>[39m
[31m+           </center>[39m
[31m+         </div>[39m
[31m+         <div class="footer">[39m
[31m+           <p>[39m
[31m+             This is an automated notification from <a href="https://www.ganamos.earth">Ganamos</a>.[39m
[31m+           </p>[39m
[31m+         </div>[39m
[31m+       </div>[39m
[31m+     </body>[39m
[31m+     </html>[39m
[31m+   [39m

 ❯ tests/unit/lib/transaction-emails.test.ts:271:27
    269| 
    270|       const htmlContent = (sendEmail as ReturnType<typeof vi.fn>).mock…
    271|       expect(htmlContent).toContain('5,000 sats')
       |                           ^
    272|     })
    273| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > email HTML structure > should include gradient header styling
AssertionError: expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain 'background: linear-gradient(135deg, #…'

[32m- Expected[39m
[31m+ Received[39m

[32m- background: linear-gradient(135deg, #10b981 0%, #059669 100%)[39m
[31m+[39m
[31m+     <!DOCTYPE html>[39m
[31m+     <html>[39m
[31m+     <head>[39m
[31m+       <meta charset="utf-8">[39m
[31m+       <meta name="viewport" content="width=device-width, initial-scale=1.0">[39m
[31m+       <style>[39m
[31m+         body {[39m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[39m
[31m+           line-height: 1.6;[39m
[31m+           color: #333;[39m
[31m+           max-width: 600px;[39m
[31m+           margin: 0 auto;[39m
[31m+           padding: 20px;[39m
[31m+           background-color: #f5f5f5;[39m
[31m+         }[39m
[31m+         .container {[39m
[31m+           background-color: #ffffff;[39m
[31m+           border-radius: 8px;[39m
[31m+           overflow: hidden;[39m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[39m
[31m+         }[39m
[31m+         .header {[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           padding: 30px 20px;[39m
[31m+           text-align: center;[39m
[31m+         }[39m
[31m+         .header h1 {[39m
[31m+           color: #ffffff;[39m
[31m+           margin: 0;[39m
[31m+           font-size: 24px;[39m
[31m+           font-weight: 600;[39m
[31m+         }[39m
[31m+         .content {[39m
[31m+           padding: 30px 20px;[39m
[31m+         }[39m
[31m+         .greeting {[39m
[31m+           font-size: 16px;[39m
[31m+           margin-bottom: 20px;[39m
[31m+         }[39m
[31m+         .details {[39m
[31m+           background-color: #f9fafb;[39m
[31m+           border-radius: 6px;[39m
[31m+           padding: 20px;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         .detail-row {[39m
[31m+           display: flex;[39m
[31m+           justify-content: space-between;[39m
[31m+           padding: 8px 0;[39m
[31m+           border-bottom: 1px solid #e5e7eb;[39m
[31m+           gap: 16px;[39m
[31m+         }[39m
[31m+         .detail-row:last-child {[39m
[31m+           border-bottom: none;[39m
[31m+         }[39m
[31m+         .detail-label {[39m
[31m+           font-weight: 600;[39m
[31m+           color: #6b7280;[39m
[31m+           flex-shrink: 0;[39m
[31m+         }[39m
[31m+         .detail-value {[39m
[31m+           color: #111827;[39m
[31m+           text-align: right;[39m
[31m+         }[39m
[31m+         .cta-button {[39m
[31m+           display: inline-block;[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           color: #ffffff !important;[39m
[31m+           text-decoration: none;[39m
[31m+           padding: 12px 30px;[39m
[31m+           border-radius: 6px;[39m
[31m+           font-weight: 600;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         a.cta-button {[39m
[31m+           color: #ffffff !important;[39m
[31m+         }[39m
[31m+         .footer {[39m
[31m+           text-align: center;[39m
[31m+           padding: 20px;[39m
[31m+           color: #6b7280;[39m
[31m+           font-size: 14px;[39m
[31m+         }[39m
[31m+         .footer a {[39m
[31m+           color: #16a349;[39m
[31m+           text-decoration: none;[39m
[31m+         }[39m
[31m+       </style>[39m
[31m+     </head>[39m
[31m+     <body>[39m
[31m+       <div class="container">[39m
[31m+         <div class="header">[39m
[31m+           <h1>Bitcoin Received</h1>[39m
[31m+         </div>[39m
[31m+         <div class="content">[39m
[31m+           <div class="greeting">[39m
[31m+             Hello Test,[39m
[31m+           </div>[39m
[31m+           <p>[39m
[31m+             You received Bitcoin via Lightning.[39m
[31m+           </p>[39m
[31m+           <div class="details">[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Amount:</span>[39m
[31m+               <span class="detail-value">1k sats (USD price unavailable)</span>[39m
[31m+             </div>[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Date:</span>[39m
[31m+               <span class="detail-value">Oct 31, 2025, 3:09 AM UTC</span>[39m
[31m+             </div>[39m
[31m+             [39m
[31m+           </div>[39m
[31m+           <center>[39m
[31m+             <a href="https://www.ganamos.earth/wallet" class="cta-button">View Wallet</a>[39m
[31m+           </center>[39m
[31m+         </div>[39m
[31m+         <div class="footer">[39m
[31m+           <p>[39m
[31m+             This is an automated notification from <a href="https://www.ganamos.earth">Ganamos</a>.[39m
[31m+           </p>[39m
[31m+         </div>[39m
[31m+       </div>[39m
[31m+     </body>[39m
[31m+     </html>[39m
[31m+   [39m

 ❯ tests/unit/lib/transaction-emails.test.ts:313:27
    311| 
    312|       const htmlContent = (sendEmail as ReturnType<typeof vi.fn>).mock…
    313|       expect(htmlContent).toContain('background: linear-gradient(135de…
       |                           ^
    314|     })
    315| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/21]⎯

 FAIL  tests/unit/lib/transaction-emails.test.ts > lib/transaction-emails > email HTML structure > should include CTA button with proper styling
AssertionError: expected '\n    <!DOCTYPE html>\n    <html>\n  …' to contain 'background: linear-gradient(135deg, #…'

[32m- Expected[39m
[31m+ Received[39m

[32m- background: linear-gradient(135deg, #10b981 0%, #059669 100%)[39m
[31m+[39m
[31m+     <!DOCTYPE html>[39m
[31m+     <html>[39m
[31m+     <head>[39m
[31m+       <meta charset="utf-8">[39m
[31m+       <meta name="viewport" content="width=device-width, initial-scale=1.0">[39m
[31m+       <style>[39m
[31m+         body {[39m
[31m+           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;[39m
[31m+           line-height: 1.6;[39m
[31m+           color: #333;[39m
[31m+           max-width: 600px;[39m
[31m+           margin: 0 auto;[39m
[31m+           padding: 20px;[39m
[31m+           background-color: #f5f5f5;[39m
[31m+         }[39m
[31m+         .container {[39m
[31m+           background-color: #ffffff;[39m
[31m+           border-radius: 8px;[39m
[31m+           overflow: hidden;[39m
[31m+           box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[39m
[31m+         }[39m
[31m+         .header {[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           padding: 30px 20px;[39m
[31m+           text-align: center;[39m
[31m+         }[39m
[31m+         .header h1 {[39m
[31m+           color: #ffffff;[39m
[31m+           margin: 0;[39m
[31m+           font-size: 24px;[39m
[31m+           font-weight: 600;[39m
[31m+         }[39m
[31m+         .content {[39m
[31m+           padding: 30px 20px;[39m
[31m+         }[39m
[31m+         .greeting {[39m
[31m+           font-size: 16px;[39m
[31m+           margin-bottom: 20px;[39m
[31m+         }[39m
[31m+         .details {[39m
[31m+           background-color: #f9fafb;[39m
[31m+           border-radius: 6px;[39m
[31m+           padding: 20px;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         .detail-row {[39m
[31m+           display: flex;[39m
[31m+           justify-content: space-between;[39m
[31m+           padding: 8px 0;[39m
[31m+           border-bottom: 1px solid #e5e7eb;[39m
[31m+           gap: 16px;[39m
[31m+         }[39m
[31m+         .detail-row:last-child {[39m
[31m+           border-bottom: none;[39m
[31m+         }[39m
[31m+         .detail-label {[39m
[31m+           font-weight: 600;[39m
[31m+           color: #6b7280;[39m
[31m+           flex-shrink: 0;[39m
[31m+         }[39m
[31m+         .detail-value {[39m
[31m+           color: #111827;[39m
[31m+           text-align: right;[39m
[31m+         }[39m
[31m+         .cta-button {[39m
[31m+           display: inline-block;[39m
[31m+           background: linear-gradient(135deg, #16a349 0%, #138a3d 100%);[39m
[31m+           color: #ffffff !important;[39m
[31m+           text-decoration: none;[39m
[31m+           padding: 12px 30px;[39m
[31m+           border-radius: 6px;[39m
[31m+           font-weight: 600;[39m
[31m+           margin: 20px 0;[39m
[31m+         }[39m
[31m+         a.cta-button {[39m
[31m+           color: #ffffff !important;[39m
[31m+         }[39m
[31m+         .footer {[39m
[31m+           text-align: center;[39m
[31m+           padding: 20px;[39m
[31m+           color: #6b7280;[39m
[31m+           font-size: 14px;[39m
[31m+         }[39m
[31m+         .footer a {[39m
[31m+           color: #16a349;[39m
[31m+           text-decoration: none;[39m
[31m+         }[39m
[31m+       </style>[39m
[31m+     </head>[39m
[31m+     <body>[39m
[31m+       <div class="container">[39m
[31m+         <div class="header">[39m
[31m+           <h1>Bitcoin Sent</h1>[39m
[31m+         </div>[39m
[31m+         <div class="content">[39m
[31m+           <div class="greeting">[39m
[31m+             Hello Test,[39m
[31m+           </div>[39m
[31m+           <p>[39m
[31m+             You sent Bitcoin via Lightning.[39m
[31m+           </p>[39m
[31m+           <div class="details">[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Amount:</span>[39m
[31m+               <span class="detail-value">1k sats (USD price unavailable)</span>[39m
[31m+             </div>[39m
[31m+             <div class="detail-row">[39m
[31m+               <span class="detail-label">Date:</span>[39m
[31m+               <span class="detail-value">Oct 31, 2025, 3:09 AM UTC</span>[39m
[31m+             </div>[39m
[31m+             [39m
[31m+           </div>[39m
[31m+           <center>[39m
[31m+             <a href="https://www.ganamos.earth/wallet" class="cta-button">View Wallet</a>[39m
[31m+           </center>[39m
[31m+         </div>[39m
[31m+         <div class="footer">[39m
[31m+           <p>[39m
[31m+             This is an automated notification from <a href="https://www.ganamos.earth">Ganamos</a>.[39m
[31m+           </p>[39m
[31m+         </div>[39m
[31m+       </div>[39m
[31m+     </body>[39m
[31m+     </html>[39m
[31m+   [39m

 ❯ tests/unit/lib/transaction-emails.test.ts:327:27
    325|       const htmlContent = (sendEmail as ReturnType<typeof vi.fn>).mock…
    326|       expect(htmlContent).toContain('class="cta-button"')
    327|       expect(htmlContent).toContain('background: linear-gradient(135de…
       |                           ^
    328|     })
    329| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/21]⎯

 FAIL  tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > dual notification sending > should send email to sender with internal transaction type
AssertionError: expected "sendBitcoinSentEmail" to be called with arguments: [ Array(1) ][90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m[2m  [[22m
[2m    {[22m
[2m      "amountSats": 15000,[22m
[32m-     "date": Any<Date>,[90m
[32m-     "toEmail": "sender@test.com",[90m
[31m+     "date": 2024-01-15T10:30:00.000Z,[90m
[31m+     "toEmail": "receiver@test.com",[90m
[2m      "toName": "Receiver Name",[22m
[2m      "transactionType": "internal",[22m
[32m-     "userName": "Sender Name",[90m
[31m+     "userName": "Receiver Name",[90m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/integration/api/email/transfer-notification.test.ts:138:36
    136|       await POST(request)
    137| 
    138|       expect(sendBitcoinSentEmail).toHaveBeenCalledWith({
       |                                    ^
    139|         toEmail: 'sender@test.com',
    140|         userName: 'Sender Name',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/21]⎯

 FAIL  tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > dual notification sending > should send email to receiver with internal transaction type
AssertionError: expected "sendBitcoinReceivedEmail" to be called with arguments: [ { toEmail: 'bob@test.com', …(5) } ][90m

Received: 

[1m  1st sendBitcoinReceivedEmail call:

[22m[2m  [[22m
[2m    {[22m
[2m      "amountSats": 25000,[22m
[32m-     "date": Any<Date>,[90m
[32m-     "fromName": "Alice",[90m
[31m+     "date": 2024-01-15T10:30:00.000Z,[90m
[31m+     "fromName": "Bob",[90m
[2m      "toEmail": "bob@test.com",[22m
[2m      "transactionType": "internal",[22m
[2m      "userName": "Bob",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/integration/api/email/transfer-notification.test.ts:166:40
    164|       await POST(request)
    165| 
    166|       expect(sendBitcoinReceivedEmail).toHaveBeenCalledWith({
       |                                        ^
    167|         toEmail: 'bob@test.com',
    168|         userName: 'Bob',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/21]⎯

 FAIL  tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send sender email when sender has @ganamos.app address
AssertionError: expected "sendBitcoinSentEmail" to not be called at all, but actually been called 1 times[90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m    Array [
      Object {
        "amountSats": 10000,
        "date": 2024-01-15T10:30:00.000Z,
        "toEmail": "external@test.com",
        "toName": "External User",
        "transactionType": "internal",
        "userName": "External User",
      },
    ]
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/integration/api/email/transfer-notification.test.ts:234:40
    232|       await POST(request)
    233| 
    234|       expect(sendBitcoinSentEmail).not.toHaveBeenCalled()
       |                                        ^
    235|       expect(sendBitcoinReceivedEmail).toHaveBeenCalledTimes(1)
    236|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/21]⎯

 FAIL  tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send receiver email when receiver has @ganamos.app address
AssertionError: expected "sendBitcoinSentEmail" to be called 1 times, but got 0 times
 ❯ tests/integration/api/email/transfer-notification.test.ts:254:36
    252|       await POST(request)
    253| 
    254|       expect(sendBitcoinSentEmail).toHaveBeenCalledTimes(1)
       |                                    ^
    255|       expect(sendBitcoinReceivedEmail).not.toHaveBeenCalled()
    256|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/21]⎯

 FAIL  tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > email filtering (@ganamos.app exclusion) > should not send email when sender email is null
AssertionError: expected "sendBitcoinSentEmail" to not be called at all, but actually been called 1 times[90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m    Array [
      Object {
        "amountSats": 10000,
        "date": 2024-01-15T10:30:00.000Z,
        "toEmail": "receiver@test.com",
        "toName": "Receiver",
        "transactionType": "internal",
        "userName": "Receiver",
      },
    ]
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/integration/api/email/transfer-notification.test.ts:294:40
    292|       await POST(request)
    293| 
    294|       expect(sendBitcoinSentEmail).not.toHaveBeenCalled()
       |                                        ^
    295|       expect(sendBitcoinReceivedEmail).toHaveBeenCalledTimes(1)
    296|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/21]⎯

 FAIL  tests/integration/api/email/transfer-notification.test.ts > POST /api/email/transfer-notification > profile fetching > should handle missing sender profile gracefully
AssertionError: expected "sendBitcoinSentEmail" to not be called at all, but actually been called 1 times[90m

Received: 

[1m  1st sendBitcoinSentEmail call:

[22m    Array [
      Object {
        "amountSats": 10000,
        "date": 2024-01-15T10:30:00.000Z,
        "toEmail": "receiver@test.com",
        "toName": "Receiver",
        "transactionType": "internal",
        "userName": "Receiver",
      },
    ]
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ tests/integration/api/email/transfer-notification.test.ts:387:40
    385|       expect(response.status).toBe(200)
    386|       expect(data.success).toBe(true)
    387|       expect(sendBitcoinSentEmail).not.toHaveBeenCalled()
       |                                        ^
    388|     })
    389| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/21]⎯


 Test Files  3 failed | 20 passed (23)
      Tests  21 failed | 488 passed | 15 skipped (524)
   Start at  03:09:23
   Duration  15.75s (transform 569ms, setup 922ms, collect 3.41s, tests 996ms, environment 6.57s, prepare 1.22s)

